@page "/nominators/"
@using Polkanalysis.Domain.Contracts.Dto.Staking.Nominator;
@using Polkanalysis.Domain.Contracts.Primary.Staking.Nominators;

@inject IMediator _mediator;

<DataMediator Request="request" Context="Nominators">
    <Breadcrumb Elements="breadcrumbDtos" />

    <div class="card">
        <div class="card-body">
            <ComponentListView Elems="Nominators">
                <CardView>
                    <Polkanalysis.Components.Substrate.Staking.Nominator.Views.NominatorItemCard Nominator="context" />
                </CardView>
                <TableView>
                    <Table Elems="Nominators" Context="tableNominator">
                        <ThContent>
                            <td scope="col">Stash account</td>
                            <td scope="col">Controller account</td>
                            <td scope="col">Reward account</td>
                            <td scope="col">Amount bonded</td>
                            <td scope="col">Status</td>
                            <td scope="col"></td>
                        </ThContent>
                        <TbodyContent>
                            <Polkanalysis.Components.Substrate.Staking.Nominator.Views.NominatorItemTable Nominator="tableNominator" />
                        </TbodyContent>
                    </Table>
                </TableView>
            </ComponentListView>
        </div>
    </div>
</DataMediator>

@code {
    private Task<Result<IEnumerable<NominatorLightDto>, ErrorResult>>? request;
    private IEnumerable<BreadcrumbDto> breadcrumbDtos = new List<BreadcrumbDto>()
        {
            new BreadcrumbDto("Nominators", "/nominators")
        };

    protected override void OnInitialized()
    {
        request = _mediator.Send(new NominatorsQuery(), CancellationToken.None);
    }
}
