@page "/modules";

@using OperationResult;
@using Polkanalysis.Components.Dto;
@using Polkanalysis.Components.Services.Http;
@using Polkanalysis.Domain.Contracts.Dto.Module;
@using Polkanalysis.Domain.Contracts.Primary.RuntimeModule;
@using Microsoft.AspNetCore.Components.Routing;

@inject IMediator _mediator;

<DataCall MediatorReq="mediatorRequest" Context="Modules">
    <Polkanalysis.Components.Shared.Breadcrumb Elements="breadcrumbDtos" />
    
    <div class="card">
        <div class="card-body">
            <ComponentListView Elems="Modules" Context="moduleItem">
                <CardView>
                    <Polkanalysis.Components.Substrate.Runtime.Views.ModuleItemCard Module="moduleItem" />
                    @*<div class="row row-cols-2 row-cols-md-4 row-cols-sm-3 g-4">
                        <Enumerable Elems="modulesContext" Context="cardModule">
                            <EmptyContent>
                                <div class="text-center">No data yet</div>
                            </EmptyContent>
                            <ElemsContent>
                                <div class="col">
                                    <Polkanalysis.Components.Substrate.Runtime.Views.ModuleItemCard Pool="cardModule" />
                                </div>
                            </ElemsContent>
                        </Enumerable>
                    </div>*@
                </CardView>
                <TableView>
                    <Polkanalysis.Components.Substrate.Runtime.Views.ModuleTable Modules="Modules" />
                    @* <Table Elems="Modules" Context="tableModule">
                        <ThContent>
                            <th>Name</th>
                            <th>Calls</th>
                            <th>Events</th>
                            <th>Storage</th>
                            <th>Constants</th>
                            <th>Errors</th>
                            <th>Details</th>
                        </ThContent>
                        <TbodyContent>
                            <tr>
                                <td>@tableModule.Information.PalletName</tD>
                                <td>@tableModule.Calls.Count()</td>
                                <td>@tableModule.Events.Count()</td>
                                <td>@tableModule.Storage.Count()</td>
                                <td>@tableModule.Constants.Count()</td>
                                <td>@tableModule.Errors.Count()</td>
                                <td>
                                    @{
                                        string urlDetail = $"/module/{tableModule.Information.PalletName}";
                                    }
                                    <NavLink class="nav-link" href="@urlDetail">
                                        <button class="btn btn-primary btn-sm">
                                            Details
                                        </button>
                                    </NavLink>
                                </td>
                            </tr>
                        </TbodyContent>
                    </Table> *@
                </TableView>
            </ComponentListView>
        </div>
    </div>
</DataCall>

@code {
    private Task<Result<IEnumerable<ModuleDetailDto>, ErrorResult>>? mediatorRequest;
    private IEnumerable<BreadcrumbDto> breadcrumbDtos = new List<BreadcrumbDto>()
    {
        new BreadcrumbDto("Modules", "/modules")
    };

    protected override void OnInitialized()
    {
        //request = new ApiRequest<IEnumerable<ModuleDetailDto>>("/api/polkadot/runtimemodule");
        mediatorRequest = _mediator.Send(new RuntimeModulesQuery(), CancellationToken.None);
    }
}
