//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using Substrate.NetApi.Model.Types.Metadata.V14;
using Substrate.NetApi.Attributes;

namespace Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_scheduler
{
    /// <summary>
    /// >> 20571 - Composite[pallet_scheduler.ScheduledBase]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public abstract class ScheduledBase : BaseType
    {
        /// <summary>
        /// >> maybe_id
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.Abstraction.IBaseValue MaybeId { get; set; }
        /// <summary>
        /// >> priority
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U8 Priority { get; set; }
        /// <summary>
        /// >> call
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum Call { get; set; }
        /// <summary>
        /// >> maybe_periodic
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.Abstraction.IBaseValue MaybePeriodic { get; set; }
        /// <summary>
        /// >> origin
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum Origin { get; set; }

        public override System.String TypeName()
        {
            return "ScheduledBase";
        }

        public override System.Byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(MaybeId.Encode());
            result.AddRange(Priority.Encode());
            result.AddRange(Call.Encode());
            result.AddRange(MaybePeriodic.Encode());
            result.AddRange(Origin.Encode());
            return result.ToArray();
        }

        public static Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_scheduler.ScheduledBase Create(byte[] data, uint version)
        {
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_scheduler.ScheduledBase instance = null;
            if (version == 9430U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9420U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9381U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9370U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9360U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9350U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9340U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            if (version == 9320U)
            {
                instance = new Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.pallet_scheduler.Scheduled();
                instance.Create(data);
            }

            return instance;
        }
    }
}