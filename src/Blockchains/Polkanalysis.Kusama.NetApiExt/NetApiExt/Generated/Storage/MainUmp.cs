//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Kusama.NetApiExt.Generated.Storage
{
    public sealed class UmpStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage _umpStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9381
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage _umpStorageV9381;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage _umpStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage _umpStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9350
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage _umpStorageV9350;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage _umpStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9320
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage _umpStorageV9320;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage _umpStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage _umpStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage _umpStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9271
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage _umpStorageV9271;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage _umpStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage _umpStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage _umpStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage _umpStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage _umpStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage _umpStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage _umpStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage _umpStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9160
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage _umpStorageV9160;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage _umpStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9150
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage _umpStorageV9150;
        /// <summary>
        /// Storage for SpecVersion 9130
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage _umpStorageV9130;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage _umpStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9111
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage _umpStorageV9111;
        /// <summary>
        /// >> RelayDispatchQueuesParams
        ///  The messages waiting to be handled by the relay-chain originating from a certain parachain.
        /// 
        ///  Note that some upward messages might have been already processed by the inclusion logic. E.g.
        ///  channel management messages.
        /// 
        ///  The messages are processed in FIFO order.
        /// </summary>
        public static string RelayDispatchQueuesParams(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.polkadot_parachain.primitives.Id)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.polkadot_parachain.primitives.Id)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.polkadot_parachain.primitives.Id)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.polkadot_parachain.primitives.Id)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.polkadot_parachain.primitives.Id)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.polkadot_parachain.primitives.Id)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.polkadot_parachain.primitives.Id)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.polkadot_parachain.primitives.Id)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.polkadot_parachain.primitives.Id)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.polkadot_parachain.primitives.Id)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.polkadot_parachain.primitives.Id)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.polkadot_parachain.primitives.Id)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.polkadot_parachain.primitives.Id)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.polkadot_parachain.primitives.Id)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.polkadot_parachain.primitives.Id)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.polkadot_parachain.primitives.Id)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.polkadot_parachain.primitives.Id)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.polkadot_parachain.primitives.Id)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.polkadot_parachain.primitives.Id)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.polkadot_parachain.primitives.Id)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.polkadot_parachain.primitives.Id)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.polkadot_parachain.primitives.Id)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.polkadot_parachain.primitives.Id)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.polkadot_parachain.primitives.Id)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.RelayDispatchQueuesParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.polkadot_parachain.primitives.Id)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RelayDispatchQueuesDefault
        /// Default value as hex string
        /// </summary>
        public static string RelayDispatchQueuesDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.RelayDispatchQueuesDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.RelayDispatchQueuesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RelayDispatchQueues
        ///  The messages waiting to be handled by the relay-chain originating from a certain parachain.
        /// 
        ///  Note that some upward messages might have been already processed by the inclusion logic. E.g.
        ///  channel management messages.
        /// 
        ///  The messages are processed in FIFO order.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> RelayDispatchQueuesAsync(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.RelayDispatchQueues((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.polkadot_parachain.primitives.Id)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RelayDispatchQueueSizeParams
        ///  Size of the dispatch queues. Caches sizes of the queues in `RelayDispatchQueue`.
        /// 
        ///  First item in the tuple is the count of messages and second
        ///  is the total length (in bytes) of the message payloads.
        /// 
        ///  Note that this is an auxiliary mapping: it's possible to tell the byte size and the number of
        ///  messages only looking at `RelayDispatchQueues`. This mapping is separate to avoid the cost of
        ///  loading the whole message queue if only the total size and count are required.
        /// 
        ///  Invariant:
        ///  - The set of keys should exactly match the set of keys of `RelayDispatchQueues`.
        /// </summary>
        public static string RelayDispatchQueueSizeParams(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.polkadot_parachain.primitives.Id)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.polkadot_parachain.primitives.Id)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.polkadot_parachain.primitives.Id)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.polkadot_parachain.primitives.Id)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.polkadot_parachain.primitives.Id)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.polkadot_parachain.primitives.Id)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.polkadot_parachain.primitives.Id)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.polkadot_parachain.primitives.Id)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.polkadot_parachain.primitives.Id)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.polkadot_parachain.primitives.Id)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.polkadot_parachain.primitives.Id)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.polkadot_parachain.primitives.Id)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.polkadot_parachain.primitives.Id)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.polkadot_parachain.primitives.Id)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.polkadot_parachain.primitives.Id)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.polkadot_parachain.primitives.Id)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.polkadot_parachain.primitives.Id)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.polkadot_parachain.primitives.Id)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.polkadot_parachain.primitives.Id)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.polkadot_parachain.primitives.Id)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.polkadot_parachain.primitives.Id)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.polkadot_parachain.primitives.Id)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.polkadot_parachain.primitives.Id)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.polkadot_parachain.primitives.Id)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.RelayDispatchQueueSizeParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.polkadot_parachain.primitives.Id)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RelayDispatchQueueSizeDefault
        /// Default value as hex string
        /// </summary>
        public static string RelayDispatchQueueSizeDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.RelayDispatchQueueSizeDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.RelayDispatchQueueSizeDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RelayDispatchQueueSize
        ///  Size of the dispatch queues. Caches sizes of the queues in `RelayDispatchQueue`.
        /// 
        ///  First item in the tuple is the count of messages and second
        ///  is the total length (in bytes) of the message payloads.
        /// 
        ///  Note that this is an auxiliary mapping: it's possible to tell the byte size and the number of
        ///  messages only looking at `RelayDispatchQueues`. This mapping is separate to avoid the cost of
        ///  loading the whole message queue if only the total size and count are required.
        /// 
        ///  Invariant:
        ///  - The set of keys should exactly match the set of keys of `RelayDispatchQueues`.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> RelayDispatchQueueSizeAsync(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.polkadot_parachain.primitives.Id)key,token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.RelayDispatchQueueSize((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.polkadot_parachain.primitives.Id)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NeedsDispatchParams
        ///  The ordered list of `ParaId`s that have a `RelayDispatchQueue` entry.
        /// 
        ///  Invariant:
        ///  - The set of items from this vector should be exactly the set of the keys in
        ///    `RelayDispatchQueues` and `RelayDispatchQueueSize`.
        /// </summary>
        public static string NeedsDispatchParams(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.NeedsDispatchParams();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.NeedsDispatchParams();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.NeedsDispatchParams();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.NeedsDispatchParams();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.NeedsDispatchParams();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.NeedsDispatchParams();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.NeedsDispatchParams();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.NeedsDispatchParams();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.NeedsDispatchParams();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.NeedsDispatchParams();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.NeedsDispatchParams();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.NeedsDispatchParams();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.NeedsDispatchParams();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.NeedsDispatchParams();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.NeedsDispatchParams();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.NeedsDispatchParams();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.NeedsDispatchParams();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.NeedsDispatchParams();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.NeedsDispatchParams();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.NeedsDispatchParams();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.NeedsDispatchParams();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.NeedsDispatchParams();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.NeedsDispatchParams();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.NeedsDispatchParams();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.NeedsDispatchParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NeedsDispatchDefault
        /// Default value as hex string
        /// </summary>
        public static string NeedsDispatchDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.NeedsDispatchDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.NeedsDispatchDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.NeedsDispatchDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.NeedsDispatchDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.NeedsDispatchDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.NeedsDispatchDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.NeedsDispatchDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.NeedsDispatchDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.NeedsDispatchDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.NeedsDispatchDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.NeedsDispatchDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.NeedsDispatchDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.NeedsDispatchDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.NeedsDispatchDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.NeedsDispatchDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.NeedsDispatchDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.NeedsDispatchDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.NeedsDispatchDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.NeedsDispatchDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.NeedsDispatchDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.NeedsDispatchDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.NeedsDispatchDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.NeedsDispatchDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.NeedsDispatchDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.NeedsDispatchDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NeedsDispatch
        ///  The ordered list of `ParaId`s that have a `RelayDispatchQueue` entry.
        /// 
        ///  Invariant:
        ///  - The set of items from this vector should be exactly the set of the keys in
        ///    `RelayDispatchQueues` and `RelayDispatchQueueSize`.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> NeedsDispatchAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.NeedsDispatch(token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.NeedsDispatch(token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.NeedsDispatch(token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.NeedsDispatch(token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.NeedsDispatch(token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.NeedsDispatch(token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.NeedsDispatch(token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.NeedsDispatch(token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.NeedsDispatch(token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.NeedsDispatch(token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.NeedsDispatch(token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.NeedsDispatch(token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.NeedsDispatch(token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.NeedsDispatch(token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.NeedsDispatch(token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.NeedsDispatch(token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.NeedsDispatch(token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.NeedsDispatch(token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.NeedsDispatch(token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.NeedsDispatch(token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.NeedsDispatch(token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.NeedsDispatch(token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.NeedsDispatch(token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.NeedsDispatch(token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.NeedsDispatch(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextDispatchRoundStartWithParams
        ///  This is the para that gets will get dispatched first during the next upward dispatchable queue
        ///  execution round.
        /// 
        ///  Invariant:
        ///  - If `Some(para)`, then `para` must be present in `NeedsDispatch`.
        /// </summary>
        public static string NextDispatchRoundStartWithParams(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.NextDispatchRoundStartWithParams();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.NextDispatchRoundStartWithParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextDispatchRoundStartWithDefault
        /// Default value as hex string
        /// </summary>
        public static string NextDispatchRoundStartWithDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.NextDispatchRoundStartWithDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.NextDispatchRoundStartWithDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextDispatchRoundStartWith
        ///  This is the para that gets will get dispatched first during the next upward dispatchable queue
        ///  execution round.
        /// 
        ///  Invariant:
        ///  - If `Some(para)`, then `para` must be present in `NeedsDispatch`.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase> NextDispatchRoundStartWithAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.polkadot_parachain.primitives.IdBase param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.NextDispatchRoundStartWith(token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.NextDispatchRoundStartWith(token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.NextDispatchRoundStartWith(token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.NextDispatchRoundStartWith(token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.NextDispatchRoundStartWith(token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.NextDispatchRoundStartWith(token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.NextDispatchRoundStartWith(token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.NextDispatchRoundStartWith(token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.NextDispatchRoundStartWith(token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.NextDispatchRoundStartWith(token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.NextDispatchRoundStartWith(token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.NextDispatchRoundStartWith(token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.NextDispatchRoundStartWith(token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.NextDispatchRoundStartWith(token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.NextDispatchRoundStartWith(token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.NextDispatchRoundStartWith(token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.NextDispatchRoundStartWith(token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.NextDispatchRoundStartWith(token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.NextDispatchRoundStartWith(token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.NextDispatchRoundStartWith(token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.NextDispatchRoundStartWith(token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.NextDispatchRoundStartWith(token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.NextDispatchRoundStartWith(token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.NextDispatchRoundStartWith(token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.NextDispatchRoundStartWith(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> OverweightParams
        ///  The messages that exceeded max individual message weight budget.
        /// 
        ///  These messages stay there until manually dispatched.
        /// </summary>
        public static string OverweightParams(Substrate.NetApi.Model.Types.Primitive.U64 key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.OverweightParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> OverweightDefault
        /// Default value as hex string
        /// </summary>
        public static string OverweightDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.OverweightDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.OverweightDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.OverweightDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.OverweightDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.OverweightDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.OverweightDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.OverweightDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.OverweightDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.OverweightDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.OverweightDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.OverweightDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.OverweightDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.OverweightDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.OverweightDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.OverweightDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.OverweightDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.OverweightDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.OverweightDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.OverweightDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.OverweightDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.OverweightDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.OverweightDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.OverweightDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.OverweightDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.OverweightDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Overweight
        ///  The messages that exceeded max individual message weight budget.
        /// 
        ///  These messages stay there until manually dispatched.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> OverweightAsync(Substrate.NetApi.Model.Types.Primitive.U64 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.Overweight((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForOverweightParams
        /// Counter for the related counted storage map
        /// </summary>
        public static string CounterForOverweightParams(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.CounterForOverweightParams();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.CounterForOverweightParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForOverweightDefault
        /// Default value as hex string
        /// </summary>
        public static string CounterForOverweightDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.CounterForOverweightDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.CounterForOverweightDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForOverweight
        /// Counter for the related counted storage map
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> CounterForOverweightAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.CounterForOverweight(token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.CounterForOverweight(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> OverweightCountParams
        ///  The number of overweight messages ever recorded in `Overweight` (and thus the lowest free
        ///  index).
        /// </summary>
        public static string OverweightCountParams(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.OverweightCountParams();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.OverweightCountParams();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.OverweightCountParams();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.OverweightCountParams();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.OverweightCountParams();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.OverweightCountParams();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.OverweightCountParams();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.OverweightCountParams();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.OverweightCountParams();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.OverweightCountParams();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.OverweightCountParams();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.OverweightCountParams();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.OverweightCountParams();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.OverweightCountParams();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.OverweightCountParams();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.OverweightCountParams();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.OverweightCountParams();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.OverweightCountParams();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.OverweightCountParams();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.OverweightCountParams();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.OverweightCountParams();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.OverweightCountParams();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.OverweightCountParams();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.OverweightCountParams();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.OverweightCountParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> OverweightCountDefault
        /// Default value as hex string
        /// </summary>
        public static string OverweightCountDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage.OverweightCountDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage.OverweightCountDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage.OverweightCountDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage.OverweightCountDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage.OverweightCountDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage.OverweightCountDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage.OverweightCountDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage.OverweightCountDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage.OverweightCountDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage.OverweightCountDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage.OverweightCountDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage.OverweightCountDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage.OverweightCountDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage.OverweightCountDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage.OverweightCountDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage.OverweightCountDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage.OverweightCountDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage.OverweightCountDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage.OverweightCountDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage.OverweightCountDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage.OverweightCountDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage.OverweightCountDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage.OverweightCountDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage.OverweightCountDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage.OverweightCountDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> OverweightCount
        ///  The number of overweight messages ever recorded in `Overweight` (and thus the lowest free
        ///  index).
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> OverweightCountAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U64 param = null;
            if (version == 9420U)
            {
                _umpStorageV9420.blockHash = blockHash;
                param = await _umpStorageV9420.OverweightCount(token);
            }

            if (version == 9381U)
            {
                _umpStorageV9381.blockHash = blockHash;
                param = await _umpStorageV9381.OverweightCount(token);
            }

            if (version == 9370U)
            {
                _umpStorageV9370.blockHash = blockHash;
                param = await _umpStorageV9370.OverweightCount(token);
            }

            if (version == 9360U)
            {
                _umpStorageV9360.blockHash = blockHash;
                param = await _umpStorageV9360.OverweightCount(token);
            }

            if (version == 9350U)
            {
                _umpStorageV9350.blockHash = blockHash;
                param = await _umpStorageV9350.OverweightCount(token);
            }

            if (version == 9340U)
            {
                _umpStorageV9340.blockHash = blockHash;
                param = await _umpStorageV9340.OverweightCount(token);
            }

            if (version == 9320U)
            {
                _umpStorageV9320.blockHash = blockHash;
                param = await _umpStorageV9320.OverweightCount(token);
            }

            if (version == 9300U)
            {
                _umpStorageV9300.blockHash = blockHash;
                param = await _umpStorageV9300.OverweightCount(token);
            }

            if (version == 9291U)
            {
                _umpStorageV9291.blockHash = blockHash;
                param = await _umpStorageV9291.OverweightCount(token);
            }

            if (version == 9280U)
            {
                _umpStorageV9280.blockHash = blockHash;
                param = await _umpStorageV9280.OverweightCount(token);
            }

            if (version == 9271U)
            {
                _umpStorageV9271.blockHash = blockHash;
                param = await _umpStorageV9271.OverweightCount(token);
            }

            if (version == 9260U)
            {
                _umpStorageV9260.blockHash = blockHash;
                param = await _umpStorageV9260.OverweightCount(token);
            }

            if (version == 9250U)
            {
                _umpStorageV9250.blockHash = blockHash;
                param = await _umpStorageV9250.OverweightCount(token);
            }

            if (version == 9230U)
            {
                _umpStorageV9230.blockHash = blockHash;
                param = await _umpStorageV9230.OverweightCount(token);
            }

            if (version == 9220U)
            {
                _umpStorageV9220.blockHash = blockHash;
                param = await _umpStorageV9220.OverweightCount(token);
            }

            if (version == 9200U)
            {
                _umpStorageV9200.blockHash = blockHash;
                param = await _umpStorageV9200.OverweightCount(token);
            }

            if (version == 9190U)
            {
                _umpStorageV9190.blockHash = blockHash;
                param = await _umpStorageV9190.OverweightCount(token);
            }

            if (version == 9180U)
            {
                _umpStorageV9180.blockHash = blockHash;
                param = await _umpStorageV9180.OverweightCount(token);
            }

            if (version == 9170U)
            {
                _umpStorageV9170.blockHash = blockHash;
                param = await _umpStorageV9170.OverweightCount(token);
            }

            if (version == 9160U)
            {
                _umpStorageV9160.blockHash = blockHash;
                param = await _umpStorageV9160.OverweightCount(token);
            }

            if (version == 9151U)
            {
                _umpStorageV9151.blockHash = blockHash;
                param = await _umpStorageV9151.OverweightCount(token);
            }

            if (version == 9150U)
            {
                _umpStorageV9150.blockHash = blockHash;
                param = await _umpStorageV9150.OverweightCount(token);
            }

            if (version == 9130U)
            {
                _umpStorageV9130.blockHash = blockHash;
                param = await _umpStorageV9130.OverweightCount(token);
            }

            if (version == 9122U)
            {
                _umpStorageV9122.blockHash = blockHash;
                param = await _umpStorageV9122.OverweightCount(token);
            }

            if (version == 9111U)
            {
                _umpStorageV9111.blockHash = blockHash;
                param = await _umpStorageV9111.OverweightCount(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public UmpStorage(SubstrateClientExt client)
        {
            _client = client;
            _umpStorageV9420 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.UmpStorage(_client);
            _umpStorageV9381 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.UmpStorage(_client);
            _umpStorageV9370 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.UmpStorage(_client);
            _umpStorageV9360 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.UmpStorage(_client);
            _umpStorageV9350 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.UmpStorage(_client);
            _umpStorageV9340 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.UmpStorage(_client);
            _umpStorageV9320 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.UmpStorage(_client);
            _umpStorageV9300 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.UmpStorage(_client);
            _umpStorageV9291 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.UmpStorage(_client);
            _umpStorageV9280 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.UmpStorage(_client);
            _umpStorageV9271 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.UmpStorage(_client);
            _umpStorageV9260 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.UmpStorage(_client);
            _umpStorageV9250 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.UmpStorage(_client);
            _umpStorageV9230 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.UmpStorage(_client);
            _umpStorageV9220 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.UmpStorage(_client);
            _umpStorageV9200 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.UmpStorage(_client);
            _umpStorageV9190 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.UmpStorage(_client);
            _umpStorageV9180 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.UmpStorage(_client);
            _umpStorageV9170 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.UmpStorage(_client);
            _umpStorageV9160 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.UmpStorage(_client);
            _umpStorageV9151 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.UmpStorage(_client);
            _umpStorageV9150 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.UmpStorage(_client);
            _umpStorageV9130 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.UmpStorage(_client);
            _umpStorageV9122 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.UmpStorage(_client);
            _umpStorageV9111 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.UmpStorage(_client);
        }
    }

    public sealed class UmpConstants
    {
    }

    public enum UmpErrors
    {
        /// <summary>
        /// >> UnknownMessageIndex
        /// The message index given is unknown.
        /// </summary>
        UnknownMessageIndex,
        /// <summary>
        /// >> WeightOverLimit
        /// The amount of weight given is possibly not enough for executing the message.
        /// </summary>
        WeightOverLimit
    }
}