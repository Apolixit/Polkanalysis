//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Kusama.NetApiExt.Generated.Storage
{
    public sealed class RecoveryStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage _recoveryStorageV9430;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage _recoveryStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9381
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage _recoveryStorageV9381;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage _recoveryStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage _recoveryStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9350
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage _recoveryStorageV9350;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage _recoveryStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9320
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage _recoveryStorageV9320;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage _recoveryStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage _recoveryStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage _recoveryStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9271
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage _recoveryStorageV9271;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage _recoveryStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage _recoveryStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage _recoveryStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage _recoveryStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage _recoveryStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage _recoveryStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage _recoveryStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage _recoveryStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9160
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage _recoveryStorageV9160;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage _recoveryStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9150
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage _recoveryStorageV9150;
        /// <summary>
        /// Storage for SpecVersion 9130
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage _recoveryStorageV9130;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage _recoveryStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9111
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage _recoveryStorageV9111;
        /// <summary>
        /// >> RecoverableParams
        ///  The set of recoverable accounts and their recovery configuration.
        /// </summary>
        public static string RecoverableParams(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.RecoverableParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> RecoverableDefault
        /// Default value as hex string
        /// </summary>
        public static string RecoverableDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.RecoverableDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.RecoverableDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.RecoverableDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.RecoverableDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.RecoverableDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.RecoverableDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.RecoverableDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.RecoverableDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.RecoverableDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.RecoverableDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.RecoverableDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.RecoverableDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.RecoverableDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.RecoverableDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.RecoverableDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.RecoverableDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.RecoverableDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.RecoverableDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.RecoverableDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.RecoverableDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.RecoverableDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.RecoverableDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.RecoverableDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.RecoverableDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.RecoverableDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.RecoverableDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Recoverable
        ///  The set of recoverable accounts and their recovery configuration.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_recovery.RecoveryConfigBase> RecoverableAsync(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_recovery.RecoveryConfigBase param = null;
            if (version == 9430U)
            {
                _recoveryStorageV9430.blockHash = blockHash;
                param = await _recoveryStorageV9430.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _recoveryStorageV9420.blockHash = blockHash;
                param = await _recoveryStorageV9420.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9381U)
            {
                _recoveryStorageV9381.blockHash = blockHash;
                param = await _recoveryStorageV9381.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _recoveryStorageV9370.blockHash = blockHash;
                param = await _recoveryStorageV9370.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _recoveryStorageV9360.blockHash = blockHash;
                param = await _recoveryStorageV9360.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9350U)
            {
                _recoveryStorageV9350.blockHash = blockHash;
                param = await _recoveryStorageV9350.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _recoveryStorageV9340.blockHash = blockHash;
                param = await _recoveryStorageV9340.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9320U)
            {
                _recoveryStorageV9320.blockHash = blockHash;
                param = await _recoveryStorageV9320.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _recoveryStorageV9300.blockHash = blockHash;
                param = await _recoveryStorageV9300.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _recoveryStorageV9291.blockHash = blockHash;
                param = await _recoveryStorageV9291.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _recoveryStorageV9280.blockHash = blockHash;
                param = await _recoveryStorageV9280.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9271U)
            {
                _recoveryStorageV9271.blockHash = blockHash;
                param = await _recoveryStorageV9271.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _recoveryStorageV9260.blockHash = blockHash;
                param = await _recoveryStorageV9260.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _recoveryStorageV9250.blockHash = blockHash;
                param = await _recoveryStorageV9250.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _recoveryStorageV9230.blockHash = blockHash;
                param = await _recoveryStorageV9230.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _recoveryStorageV9220.blockHash = blockHash;
                param = await _recoveryStorageV9220.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _recoveryStorageV9200.blockHash = blockHash;
                param = await _recoveryStorageV9200.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _recoveryStorageV9190.blockHash = blockHash;
                param = await _recoveryStorageV9190.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _recoveryStorageV9180.blockHash = blockHash;
                param = await _recoveryStorageV9180.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _recoveryStorageV9170.blockHash = blockHash;
                param = await _recoveryStorageV9170.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9160U)
            {
                _recoveryStorageV9160.blockHash = blockHash;
                param = await _recoveryStorageV9160.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _recoveryStorageV9151.blockHash = blockHash;
                param = await _recoveryStorageV9151.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9150U)
            {
                _recoveryStorageV9150.blockHash = blockHash;
                param = await _recoveryStorageV9150.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9130U)
            {
                _recoveryStorageV9130.blockHash = blockHash;
                param = await _recoveryStorageV9130.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _recoveryStorageV9122.blockHash = blockHash;
                param = await _recoveryStorageV9122.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9111U)
            {
                _recoveryStorageV9111.blockHash = blockHash;
                param = await _recoveryStorageV9111.Recoverable((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ActiveRecoveriesParams
        ///  Active recovery attempts.
        /// 
        ///  First account is the account to be recovered, and the second account
        ///  is the user trying to recover the account.
        /// </summary>
        public static string ActiveRecoveriesParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32>)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32>)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32>)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32>)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32>)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32>)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32>)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32>)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32>)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32>)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32>)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32>)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32>)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32>)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32>)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32>)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32>)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.ActiveRecoveriesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ActiveRecoveriesDefault
        /// Default value as hex string
        /// </summary>
        public static string ActiveRecoveriesDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.ActiveRecoveriesDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.ActiveRecoveriesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ActiveRecoveries
        ///  Active recovery attempts.
        /// 
        ///  First account is the account to be recovered, and the second account
        ///  is the user trying to recover the account.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_recovery.ActiveRecoveryBase> ActiveRecoveriesAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_recovery.ActiveRecoveryBase param = null;
            if (version == 9430U)
            {
                _recoveryStorageV9430.blockHash = blockHash;
                param = await _recoveryStorageV9430.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9420U)
            {
                _recoveryStorageV9420.blockHash = blockHash;
                param = await _recoveryStorageV9420.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9381U)
            {
                _recoveryStorageV9381.blockHash = blockHash;
                param = await _recoveryStorageV9381.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9370U)
            {
                _recoveryStorageV9370.blockHash = blockHash;
                param = await _recoveryStorageV9370.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9360U)
            {
                _recoveryStorageV9360.blockHash = blockHash;
                param = await _recoveryStorageV9360.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9350U)
            {
                _recoveryStorageV9350.blockHash = blockHash;
                param = await _recoveryStorageV9350.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9340U)
            {
                _recoveryStorageV9340.blockHash = blockHash;
                param = await _recoveryStorageV9340.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9320U)
            {
                _recoveryStorageV9320.blockHash = blockHash;
                param = await _recoveryStorageV9320.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9300U)
            {
                _recoveryStorageV9300.blockHash = blockHash;
                param = await _recoveryStorageV9300.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9291U)
            {
                _recoveryStorageV9291.blockHash = blockHash;
                param = await _recoveryStorageV9291.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9280U)
            {
                _recoveryStorageV9280.blockHash = blockHash;
                param = await _recoveryStorageV9280.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9271U)
            {
                _recoveryStorageV9271.blockHash = blockHash;
                param = await _recoveryStorageV9271.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9260U)
            {
                _recoveryStorageV9260.blockHash = blockHash;
                param = await _recoveryStorageV9260.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9250U)
            {
                _recoveryStorageV9250.blockHash = blockHash;
                param = await _recoveryStorageV9250.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9230U)
            {
                _recoveryStorageV9230.blockHash = blockHash;
                param = await _recoveryStorageV9230.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9220U)
            {
                _recoveryStorageV9220.blockHash = blockHash;
                param = await _recoveryStorageV9220.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9200U)
            {
                _recoveryStorageV9200.blockHash = blockHash;
                param = await _recoveryStorageV9200.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9190U)
            {
                _recoveryStorageV9190.blockHash = blockHash;
                param = await _recoveryStorageV9190.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9180U)
            {
                _recoveryStorageV9180.blockHash = blockHash;
                param = await _recoveryStorageV9180.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9170U)
            {
                _recoveryStorageV9170.blockHash = blockHash;
                param = await _recoveryStorageV9170.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9160U)
            {
                _recoveryStorageV9160.blockHash = blockHash;
                param = await _recoveryStorageV9160.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9151U)
            {
                _recoveryStorageV9151.blockHash = blockHash;
                param = await _recoveryStorageV9151.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9150U)
            {
                _recoveryStorageV9150.blockHash = blockHash;
                param = await _recoveryStorageV9150.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9130U)
            {
                _recoveryStorageV9130.blockHash = blockHash;
                param = await _recoveryStorageV9130.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9122U)
            {
                _recoveryStorageV9122.blockHash = blockHash;
                param = await _recoveryStorageV9122.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9111U)
            {
                _recoveryStorageV9111.blockHash = blockHash;
                param = await _recoveryStorageV9111.ActiveRecoveries((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ProxyParams
        ///  The list of allowed proxy accounts.
        /// 
        ///  Map from the user who can access it to the recovered account.
        /// </summary>
        public static string ProxyParams(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.ProxyParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ProxyDefault
        /// Default value as hex string
        /// </summary>
        public static string ProxyDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage.ProxyDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage.ProxyDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage.ProxyDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage.ProxyDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage.ProxyDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage.ProxyDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage.ProxyDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage.ProxyDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage.ProxyDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage.ProxyDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage.ProxyDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage.ProxyDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage.ProxyDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage.ProxyDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage.ProxyDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage.ProxyDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage.ProxyDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage.ProxyDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage.ProxyDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage.ProxyDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage.ProxyDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage.ProxyDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage.ProxyDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage.ProxyDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage.ProxyDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage.ProxyDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Proxy
        ///  The list of allowed proxy accounts.
        /// 
        ///  Map from the user who can access it to the recovered account.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base> ProxyAsync(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base param = null;
            if (version == 9430U)
            {
                _recoveryStorageV9430.blockHash = blockHash;
                param = await _recoveryStorageV9430.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _recoveryStorageV9420.blockHash = blockHash;
                param = await _recoveryStorageV9420.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9381U)
            {
                _recoveryStorageV9381.blockHash = blockHash;
                param = await _recoveryStorageV9381.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _recoveryStorageV9370.blockHash = blockHash;
                param = await _recoveryStorageV9370.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _recoveryStorageV9360.blockHash = blockHash;
                param = await _recoveryStorageV9360.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9350U)
            {
                _recoveryStorageV9350.blockHash = blockHash;
                param = await _recoveryStorageV9350.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _recoveryStorageV9340.blockHash = blockHash;
                param = await _recoveryStorageV9340.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9320U)
            {
                _recoveryStorageV9320.blockHash = blockHash;
                param = await _recoveryStorageV9320.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _recoveryStorageV9300.blockHash = blockHash;
                param = await _recoveryStorageV9300.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _recoveryStorageV9291.blockHash = blockHash;
                param = await _recoveryStorageV9291.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _recoveryStorageV9280.blockHash = blockHash;
                param = await _recoveryStorageV9280.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9271U)
            {
                _recoveryStorageV9271.blockHash = blockHash;
                param = await _recoveryStorageV9271.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9271.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _recoveryStorageV9260.blockHash = blockHash;
                param = await _recoveryStorageV9260.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _recoveryStorageV9250.blockHash = blockHash;
                param = await _recoveryStorageV9250.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _recoveryStorageV9230.blockHash = blockHash;
                param = await _recoveryStorageV9230.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _recoveryStorageV9220.blockHash = blockHash;
                param = await _recoveryStorageV9220.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _recoveryStorageV9200.blockHash = blockHash;
                param = await _recoveryStorageV9200.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _recoveryStorageV9190.blockHash = blockHash;
                param = await _recoveryStorageV9190.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _recoveryStorageV9180.blockHash = blockHash;
                param = await _recoveryStorageV9180.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _recoveryStorageV9170.blockHash = blockHash;
                param = await _recoveryStorageV9170.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9160U)
            {
                _recoveryStorageV9160.blockHash = blockHash;
                param = await _recoveryStorageV9160.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9160.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _recoveryStorageV9151.blockHash = blockHash;
                param = await _recoveryStorageV9151.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9150U)
            {
                _recoveryStorageV9150.blockHash = blockHash;
                param = await _recoveryStorageV9150.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9150.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9130U)
            {
                _recoveryStorageV9130.blockHash = blockHash;
                param = await _recoveryStorageV9130.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9130.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _recoveryStorageV9122.blockHash = blockHash;
                param = await _recoveryStorageV9122.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9111U)
            {
                _recoveryStorageV9111.blockHash = blockHash;
                param = await _recoveryStorageV9111.Proxy((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9111.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public RecoveryStorage(SubstrateClientExt client)
        {
            _client = client;
            _recoveryStorageV9430 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryStorage(_client);
            _recoveryStorageV9420 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryStorage(_client);
            _recoveryStorageV9381 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryStorage(_client);
            _recoveryStorageV9370 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryStorage(_client);
            _recoveryStorageV9360 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryStorage(_client);
            _recoveryStorageV9350 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryStorage(_client);
            _recoveryStorageV9340 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryStorage(_client);
            _recoveryStorageV9320 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryStorage(_client);
            _recoveryStorageV9300 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryStorage(_client);
            _recoveryStorageV9291 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryStorage(_client);
            _recoveryStorageV9280 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryStorage(_client);
            _recoveryStorageV9271 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryStorage(_client);
            _recoveryStorageV9260 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryStorage(_client);
            _recoveryStorageV9250 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryStorage(_client);
            _recoveryStorageV9230 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryStorage(_client);
            _recoveryStorageV9220 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryStorage(_client);
            _recoveryStorageV9200 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryStorage(_client);
            _recoveryStorageV9190 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryStorage(_client);
            _recoveryStorageV9180 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryStorage(_client);
            _recoveryStorageV9170 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryStorage(_client);
            _recoveryStorageV9160 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryStorage(_client);
            _recoveryStorageV9151 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryStorage(_client);
            _recoveryStorageV9150 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryStorage(_client);
            _recoveryStorageV9130 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryStorage(_client);
            _recoveryStorageV9122 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryStorage(_client);
            _recoveryStorageV9111 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryStorage(_client);
        }
    }

    public sealed class RecoveryConstants
    {
        /// <summary>
        /// >> ConfigDepositBase
        ///  The base amount of currency needed to reserve for creating a recovery configuration.
        /// 
        ///  This is held for an additional storage item whose value size is
        ///  `2 + sizeof(BlockNumber, Balance)` bytes.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ConfigDepositBase(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U128 result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryConstants().ConfigDepositBase();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryConstants().ConfigDepositBase();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryConstants().ConfigDepositBase();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryConstants().ConfigDepositBase();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryConstants().ConfigDepositBase();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryConstants().ConfigDepositBase();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryConstants().ConfigDepositBase();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryConstants().ConfigDepositBase();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryConstants().ConfigDepositBase();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryConstants().ConfigDepositBase();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryConstants().ConfigDepositBase();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryConstants().ConfigDepositBase();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryConstants().ConfigDepositBase();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryConstants().ConfigDepositBase();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryConstants().ConfigDepositBase();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryConstants().ConfigDepositBase();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryConstants().ConfigDepositBase();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryConstants().ConfigDepositBase();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryConstants().ConfigDepositBase();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryConstants().ConfigDepositBase();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryConstants().ConfigDepositBase();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryConstants().ConfigDepositBase();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryConstants().ConfigDepositBase();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryConstants().ConfigDepositBase();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryConstants().ConfigDepositBase();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryConstants().ConfigDepositBase();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> FriendDepositFactor
        ///  The amount of currency needed per additional user when creating a recovery
        ///  configuration.
        /// 
        ///  This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage
        ///  value.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 FriendDepositFactor(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U128 result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryConstants().FriendDepositFactor();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryConstants().FriendDepositFactor();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryConstants().FriendDepositFactor();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryConstants().FriendDepositFactor();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryConstants().FriendDepositFactor();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryConstants().FriendDepositFactor();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryConstants().FriendDepositFactor();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryConstants().FriendDepositFactor();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryConstants().FriendDepositFactor();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryConstants().FriendDepositFactor();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryConstants().FriendDepositFactor();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryConstants().FriendDepositFactor();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryConstants().FriendDepositFactor();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryConstants().FriendDepositFactor();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryConstants().FriendDepositFactor();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryConstants().FriendDepositFactor();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryConstants().FriendDepositFactor();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryConstants().FriendDepositFactor();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryConstants().FriendDepositFactor();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryConstants().FriendDepositFactor();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryConstants().FriendDepositFactor();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryConstants().FriendDepositFactor();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryConstants().FriendDepositFactor();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryConstants().FriendDepositFactor();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryConstants().FriendDepositFactor();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryConstants().FriendDepositFactor();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxFriends
        ///  The maximum amount of friends allowed in a recovery configuration.
        /// 
        ///  NOTE: The threshold programmed in this Pallet uses u16, so it does
        ///  not really make sense to have a limit here greater than u16::MAX.
        ///  But also, that is a lot more than you should probably set this value
        ///  to anyway...
        /// </summary>
        public IType MaxFriends(uint version)
        {
            IType result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryConstants().MaxFriends();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryConstants().MaxFriends();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryConstants().MaxFriends();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryConstants().MaxFriends();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryConstants().MaxFriends();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryConstants().MaxFriends();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryConstants().MaxFriends();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryConstants().MaxFriends();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryConstants().MaxFriends();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryConstants().MaxFriends();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryConstants().MaxFriends();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryConstants().MaxFriends();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryConstants().MaxFriends();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryConstants().MaxFriends();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryConstants().MaxFriends();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryConstants().MaxFriends();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryConstants().MaxFriends();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryConstants().MaxFriends();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryConstants().MaxFriends();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryConstants().MaxFriends();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryConstants().MaxFriends();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryConstants().MaxFriends();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryConstants().MaxFriends();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryConstants().MaxFriends();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryConstants().MaxFriends();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryConstants().MaxFriends();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> RecoveryDeposit
        ///  The base amount of currency needed to reserve for starting a recovery.
        /// 
        ///  This is primarily held for deterring malicious recovery attempts, and should
        ///  have a value large enough that a bad actor would choose not to place this
        ///  deposit. It also acts to fund additional storage item whose value size is
        ///  `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable
        ///  threshold.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 RecoveryDeposit(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U128 result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.RecoveryConstants().RecoveryDeposit();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.RecoveryConstants().RecoveryDeposit();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.RecoveryConstants().RecoveryDeposit();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.RecoveryConstants().RecoveryDeposit();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.RecoveryConstants().RecoveryDeposit();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.RecoveryConstants().RecoveryDeposit();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.RecoveryConstants().RecoveryDeposit();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.RecoveryConstants().RecoveryDeposit();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.RecoveryConstants().RecoveryDeposit();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.RecoveryConstants().RecoveryDeposit();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.RecoveryConstants().RecoveryDeposit();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.RecoveryConstants().RecoveryDeposit();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.RecoveryConstants().RecoveryDeposit();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.RecoveryConstants().RecoveryDeposit();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.RecoveryConstants().RecoveryDeposit();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.RecoveryConstants().RecoveryDeposit();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.RecoveryConstants().RecoveryDeposit();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.RecoveryConstants().RecoveryDeposit();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.RecoveryConstants().RecoveryDeposit();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.RecoveryConstants().RecoveryDeposit();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.RecoveryConstants().RecoveryDeposit();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.RecoveryConstants().RecoveryDeposit();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.RecoveryConstants().RecoveryDeposit();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.RecoveryConstants().RecoveryDeposit();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.RecoveryConstants().RecoveryDeposit();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.RecoveryConstants().RecoveryDeposit();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }
    }

    public enum RecoveryErrors
    {
        /// <summary>
        /// >> NotAllowed
        /// User is not allowed to make a call on behalf of this account
        /// </summary>
        NotAllowed,
        /// <summary>
        /// >> ZeroThreshold
        /// Threshold must be greater than zero
        /// </summary>
        ZeroThreshold,
        /// <summary>
        /// >> NotEnoughFriends
        /// Friends list must be greater than zero and threshold
        /// </summary>
        NotEnoughFriends,
        /// <summary>
        /// >> MaxFriends
        /// Friends list must be less than max friends
        /// </summary>
        MaxFriends,
        /// <summary>
        /// >> NotSorted
        /// Friends list must be sorted and free of duplicates
        /// </summary>
        NotSorted,
        /// <summary>
        /// >> NotRecoverable
        /// This account is not set up for recovery
        /// </summary>
        NotRecoverable,
        /// <summary>
        /// >> AlreadyRecoverable
        /// This account is already set up for recovery
        /// </summary>
        AlreadyRecoverable,
        /// <summary>
        /// >> AlreadyStarted
        /// A recovery process has already started for this account
        /// </summary>
        AlreadyStarted,
        /// <summary>
        /// >> NotStarted
        /// A recovery process has not started for this rescuer
        /// </summary>
        NotStarted,
        /// <summary>
        /// >> NotFriend
        /// This account is not a friend who can vouch
        /// </summary>
        NotFriend,
        /// <summary>
        /// >> DelayPeriod
        /// The friend must wait until the delay period to vouch for this recovery
        /// </summary>
        DelayPeriod,
        /// <summary>
        /// >> AlreadyVouched
        /// This user has already vouched for this recovery
        /// </summary>
        AlreadyVouched,
        /// <summary>
        /// >> Threshold
        /// The threshold for recovering this account has not been met
        /// </summary>
        Threshold,
        /// <summary>
        /// >> StillActive
        /// There are still active recovery attempts that need to be closed
        /// </summary>
        StillActive,
        /// <summary>
        /// >> AlreadyProxy
        /// This account is already set up for recovery
        /// </summary>
        AlreadyProxy,
        /// <summary>
        /// >> BadState
        /// Some internal state is broken.
        /// </summary>
        BadState
    }
}