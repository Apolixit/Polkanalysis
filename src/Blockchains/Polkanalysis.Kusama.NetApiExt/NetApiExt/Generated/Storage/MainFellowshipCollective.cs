//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Kusama.NetApiExt.Generated.Storage
{
    public sealed class FellowshipCollectiveStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9430;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9381
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9381;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9350
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9350;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9320
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage _fellowshipCollectiveStorageV9320;
        /// <summary>
        /// >> MemberCountParams
        ///  The number of members in the collective who have at least the rank according to the index
        ///  of the vec.
        /// </summary>
        public static string MemberCountParams(Substrate.NetApi.Model.Types.Primitive.U16 key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.MemberCountParams((Substrate.NetApi.Model.Types.Primitive.U16)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> MemberCountDefault
        /// Default value as hex string
        /// </summary>
        public static string MemberCountDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.MemberCountDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.MemberCountDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> MemberCount
        ///  The number of members in the collective who have at least the rank according to the index
        ///  of the vec.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> MemberCountAsync(Substrate.NetApi.Model.Types.Primitive.U16 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.MemberCount((Substrate.NetApi.Model.Types.Primitive.U16)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> MembersParams
        ///  The current members of the collective.
        /// </summary>
        public static string MembersParams(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.MembersParams((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> MembersDefault
        /// Default value as hex string
        /// </summary>
        public static string MembersDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.MembersDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.MembersDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Members
        ///  The current members of the collective.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_ranked_collective.MemberRecordBase> MembersAsync(Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.pallet_ranked_collective.MemberRecordBase param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.Members((Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IdToIndexParams
        ///  The index of each ranks's member into the group of members who have at least that rank.
        /// </summary>
        public static string IdToIndexParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.IdToIndexParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IdToIndexDefault
        /// Default value as hex string
        /// </summary>
        public static string IdToIndexDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.IdToIndexDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.IdToIndexDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IdToIndex
        ///  The index of each ranks's member into the group of members who have at least that rank.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> IdToIndexAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.IdToIndex((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IndexToIdParams
        ///  The members in the collective by index. All indices in the range `0..MemberCount` will
        ///  return `Some`, however a member's index is not guaranteed to remain unchanged over time.
        /// </summary>
        public static string IndexToIdParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.IndexToIdParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IndexToIdDefault
        /// Default value as hex string
        /// </summary>
        public static string IndexToIdDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.IndexToIdDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.IndexToIdDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IndexToId
        ///  The members in the collective by index. All indices in the range `0..MemberCount` will
        ///  return `Some`, however a member's index is not guaranteed to remain unchanged over time.
        /// </summary>
        public async Task<Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base> IndexToIdAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Kusama.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.IndexToId((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U16, Substrate.NetApi.Model.Types.Primitive.U32>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> VotingParams
        ///  Votes on a given proposal, if it is ongoing.
        /// </summary>
        public static string VotingParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.VotingParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> VotingDefault
        /// Default value as hex string
        /// </summary>
        public static string VotingDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.VotingDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.VotingDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Voting
        ///  Votes on a given proposal, if it is ongoing.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum> VotingAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9381.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9350.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32>)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.Voting((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Kusama.NetApiExt.Generated.Model.v9320.sp_core.crypto.AccountId32>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> VotingCleanupParams
        /// </summary>
        public static string VotingCleanupParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.VotingCleanupParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> VotingCleanupDefault
        /// Default value as hex string
        /// </summary>
        public static string VotingCleanupDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage.VotingCleanupDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> VotingCleanup
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> VotingCleanupAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9430U)
            {
                _fellowshipCollectiveStorageV9430.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9430.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9420U)
            {
                _fellowshipCollectiveStorageV9420.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9420.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9381U)
            {
                _fellowshipCollectiveStorageV9381.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9381.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9370U)
            {
                _fellowshipCollectiveStorageV9370.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9370.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9360U)
            {
                _fellowshipCollectiveStorageV9360.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9360.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9350U)
            {
                _fellowshipCollectiveStorageV9350.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9350.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9340U)
            {
                _fellowshipCollectiveStorageV9340.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9340.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9320U)
            {
                _fellowshipCollectiveStorageV9320.blockHash = blockHash;
                param = await _fellowshipCollectiveStorageV9320.VotingCleanup((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public FellowshipCollectiveStorage(SubstrateClientExt client)
        {
            _client = client;
            _fellowshipCollectiveStorageV9430 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9420 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9381 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9370 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9360 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9350 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9340 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.FellowshipCollectiveStorage(_client);
            _fellowshipCollectiveStorageV9320 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.FellowshipCollectiveStorage(_client);
        }
    }

    public sealed class FellowshipCollectiveConstants
    {
    }

    public enum FellowshipCollectiveErrors
    {
        /// <summary>
        /// >> AlreadyMember
        /// Account is already a member.
        /// </summary>
        AlreadyMember,
        /// <summary>
        /// >> NotMember
        /// Account is not a member.
        /// </summary>
        NotMember,
        /// <summary>
        /// >> NotPolling
        /// The given poll index is unknown or has closed.
        /// </summary>
        NotPolling,
        /// <summary>
        /// >> Ongoing
        /// The given poll is still ongoing.
        /// </summary>
        Ongoing,
        /// <summary>
        /// >> NoneRemaining
        /// There are no further records to be removed.
        /// </summary>
        NoneRemaining,
        /// <summary>
        /// >> Corruption
        /// Unexpected error in state.
        /// </summary>
        Corruption,
        /// <summary>
        /// >> RankTooLow
        /// The member's rank is too low to vote.
        /// </summary>
        RankTooLow,
        /// <summary>
        /// >> InvalidWitness
        /// The information provided is incorrect.
        /// </summary>
        InvalidWitness,
        /// <summary>
        /// >> NoPermission
        /// The origin is not sufficiently privileged to do the operation.
        /// </summary>
        NoPermission
    }
}