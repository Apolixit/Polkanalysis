//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Kusama.NetApiExt.Generated.Storage
{
    public sealed class SchedulerStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage _schedulerStorageV9430;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage _schedulerStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9381
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage _schedulerStorageV9381;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage _schedulerStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage _schedulerStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9350
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage _schedulerStorageV9350;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage _schedulerStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9320
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage _schedulerStorageV9320;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage _schedulerStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage _schedulerStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage _schedulerStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9271
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage _schedulerStorageV9271;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage _schedulerStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage _schedulerStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage _schedulerStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage _schedulerStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage _schedulerStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage _schedulerStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage _schedulerStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage _schedulerStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9160
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage _schedulerStorageV9160;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage _schedulerStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9150
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage _schedulerStorageV9150;
        /// <summary>
        /// Storage for SpecVersion 9130
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage _schedulerStorageV9130;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage _schedulerStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9111
        /// </summary>
        private Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage _schedulerStorageV9111;
        /// <summary>
        /// >> IncompleteSinceParams
        /// </summary>
        public static string IncompleteSinceParams(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.IncompleteSinceParams();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.IncompleteSinceParams();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.IncompleteSinceParams();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.IncompleteSinceParams();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.IncompleteSinceParams();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.IncompleteSinceParams();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.IncompleteSinceParams();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.IncompleteSinceParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IncompleteSinceDefault
        /// Default value as hex string
        /// </summary>
        public static string IncompleteSinceDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.IncompleteSinceDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.IncompleteSinceDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> IncompleteSince
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> IncompleteSinceAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9430U)
            {
                _schedulerStorageV9430.blockHash = blockHash;
                param = await _schedulerStorageV9430.IncompleteSince(token);
            }

            if (version == 9420U)
            {
                _schedulerStorageV9420.blockHash = blockHash;
                param = await _schedulerStorageV9420.IncompleteSince(token);
            }

            if (version == 9381U)
            {
                _schedulerStorageV9381.blockHash = blockHash;
                param = await _schedulerStorageV9381.IncompleteSince(token);
            }

            if (version == 9370U)
            {
                _schedulerStorageV9370.blockHash = blockHash;
                param = await _schedulerStorageV9370.IncompleteSince(token);
            }

            if (version == 9360U)
            {
                _schedulerStorageV9360.blockHash = blockHash;
                param = await _schedulerStorageV9360.IncompleteSince(token);
            }

            if (version == 9350U)
            {
                _schedulerStorageV9350.blockHash = blockHash;
                param = await _schedulerStorageV9350.IncompleteSince(token);
            }

            if (version == 9340U)
            {
                _schedulerStorageV9340.blockHash = blockHash;
                param = await _schedulerStorageV9340.IncompleteSince(token);
            }

            if (version == 9320U)
            {
                _schedulerStorageV9320.blockHash = blockHash;
                param = await _schedulerStorageV9320.IncompleteSince(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AgendaParams
        ///  Items to be executed, indexed by the block number that they should be executed on.
        /// </summary>
        public static string AgendaParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.AgendaParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AgendaDefault
        /// Default value as hex string
        /// </summary>
        public static string AgendaDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.AgendaDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.AgendaDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.AgendaDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.AgendaDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.AgendaDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.AgendaDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.AgendaDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.AgendaDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage.AgendaDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage.AgendaDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage.AgendaDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage.AgendaDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage.AgendaDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage.AgendaDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage.AgendaDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage.AgendaDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage.AgendaDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage.AgendaDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage.AgendaDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage.AgendaDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage.AgendaDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.AgendaDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.AgendaDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.AgendaDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.AgendaDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.AgendaDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Agenda
        ///  Items to be executed, indexed by the block number that they should be executed on.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> AgendaAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9430U)
            {
                _schedulerStorageV9430.blockHash = blockHash;
                param = await _schedulerStorageV9430.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9420U)
            {
                _schedulerStorageV9420.blockHash = blockHash;
                param = await _schedulerStorageV9420.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9381U)
            {
                _schedulerStorageV9381.blockHash = blockHash;
                param = await _schedulerStorageV9381.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9370U)
            {
                _schedulerStorageV9370.blockHash = blockHash;
                param = await _schedulerStorageV9370.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9360U)
            {
                _schedulerStorageV9360.blockHash = blockHash;
                param = await _schedulerStorageV9360.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9350U)
            {
                _schedulerStorageV9350.blockHash = blockHash;
                param = await _schedulerStorageV9350.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9340U)
            {
                _schedulerStorageV9340.blockHash = blockHash;
                param = await _schedulerStorageV9340.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9320U)
            {
                _schedulerStorageV9320.blockHash = blockHash;
                param = await _schedulerStorageV9320.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9300U)
            {
                _schedulerStorageV9300.blockHash = blockHash;
                param = await _schedulerStorageV9300.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9291U)
            {
                _schedulerStorageV9291.blockHash = blockHash;
                param = await _schedulerStorageV9291.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9280U)
            {
                _schedulerStorageV9280.blockHash = blockHash;
                param = await _schedulerStorageV9280.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9271U)
            {
                _schedulerStorageV9271.blockHash = blockHash;
                param = await _schedulerStorageV9271.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9260U)
            {
                _schedulerStorageV9260.blockHash = blockHash;
                param = await _schedulerStorageV9260.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9250U)
            {
                _schedulerStorageV9250.blockHash = blockHash;
                param = await _schedulerStorageV9250.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9230U)
            {
                _schedulerStorageV9230.blockHash = blockHash;
                param = await _schedulerStorageV9230.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9220U)
            {
                _schedulerStorageV9220.blockHash = blockHash;
                param = await _schedulerStorageV9220.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9200U)
            {
                _schedulerStorageV9200.blockHash = blockHash;
                param = await _schedulerStorageV9200.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9190U)
            {
                _schedulerStorageV9190.blockHash = blockHash;
                param = await _schedulerStorageV9190.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9180U)
            {
                _schedulerStorageV9180.blockHash = blockHash;
                param = await _schedulerStorageV9180.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9170U)
            {
                _schedulerStorageV9170.blockHash = blockHash;
                param = await _schedulerStorageV9170.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9160U)
            {
                _schedulerStorageV9160.blockHash = blockHash;
                param = await _schedulerStorageV9160.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9151U)
            {
                _schedulerStorageV9151.blockHash = blockHash;
                param = await _schedulerStorageV9151.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9150U)
            {
                _schedulerStorageV9150.blockHash = blockHash;
                param = await _schedulerStorageV9150.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9130U)
            {
                _schedulerStorageV9130.blockHash = blockHash;
                param = await _schedulerStorageV9130.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9122U)
            {
                _schedulerStorageV9122.blockHash = blockHash;
                param = await _schedulerStorageV9122.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9111U)
            {
                _schedulerStorageV9111.blockHash = blockHash;
                param = await _schedulerStorageV9111.Agenda((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> LookupParams
        ///  Lookup from a name to the block number and index of the task.
        /// 
        ///  For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4
        ///  identities.
        /// </summary>
        public static string LookupParams(IType key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.LookupParams((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key);
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.LookupParams((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> LookupDefault
        /// Default value as hex string
        /// </summary>
        public static string LookupDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage.LookupDefault();
            if (version == 9420U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage.LookupDefault();
            if (version == 9381U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage.LookupDefault();
            if (version == 9370U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage.LookupDefault();
            if (version == 9360U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage.LookupDefault();
            if (version == 9350U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage.LookupDefault();
            if (version == 9340U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage.LookupDefault();
            if (version == 9320U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage.LookupDefault();
            if (version == 9300U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage.LookupDefault();
            if (version == 9291U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage.LookupDefault();
            if (version == 9280U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage.LookupDefault();
            if (version == 9271U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage.LookupDefault();
            if (version == 9260U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage.LookupDefault();
            if (version == 9250U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage.LookupDefault();
            if (version == 9230U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage.LookupDefault();
            if (version == 9220U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage.LookupDefault();
            if (version == 9200U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage.LookupDefault();
            if (version == 9190U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage.LookupDefault();
            if (version == 9180U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage.LookupDefault();
            if (version == 9170U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage.LookupDefault();
            if (version == 9160U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage.LookupDefault();
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.LookupDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.LookupDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.LookupDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.LookupDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.LookupDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Lookup
        ///  Lookup from a name to the block number and index of the task.
        /// 
        ///  For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4
        ///  identities.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> LookupAsync(IType key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9430U)
            {
                _schedulerStorageV9430.blockHash = blockHash;
                param = await _schedulerStorageV9430.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9420U)
            {
                _schedulerStorageV9420.blockHash = blockHash;
                param = await _schedulerStorageV9420.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9381U)
            {
                _schedulerStorageV9381.blockHash = blockHash;
                param = await _schedulerStorageV9381.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9370U)
            {
                _schedulerStorageV9370.blockHash = blockHash;
                param = await _schedulerStorageV9370.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9360U)
            {
                _schedulerStorageV9360.blockHash = blockHash;
                param = await _schedulerStorageV9360.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9350U)
            {
                _schedulerStorageV9350.blockHash = blockHash;
                param = await _schedulerStorageV9350.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9340U)
            {
                _schedulerStorageV9340.blockHash = blockHash;
                param = await _schedulerStorageV9340.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9320U)
            {
                _schedulerStorageV9320.blockHash = blockHash;
                param = await _schedulerStorageV9320.Lookup((Polkanalysis.Kusama.NetApiExt.Generated.Types.Base.Arr32U8)key,token);
            }

            if (version == 9300U)
            {
                _schedulerStorageV9300.blockHash = blockHash;
                param = await _schedulerStorageV9300.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9291U)
            {
                _schedulerStorageV9291.blockHash = blockHash;
                param = await _schedulerStorageV9291.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9280U)
            {
                _schedulerStorageV9280.blockHash = blockHash;
                param = await _schedulerStorageV9280.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9271U)
            {
                _schedulerStorageV9271.blockHash = blockHash;
                param = await _schedulerStorageV9271.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9260U)
            {
                _schedulerStorageV9260.blockHash = blockHash;
                param = await _schedulerStorageV9260.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9250U)
            {
                _schedulerStorageV9250.blockHash = blockHash;
                param = await _schedulerStorageV9250.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9230U)
            {
                _schedulerStorageV9230.blockHash = blockHash;
                param = await _schedulerStorageV9230.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9220U)
            {
                _schedulerStorageV9220.blockHash = blockHash;
                param = await _schedulerStorageV9220.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9200U)
            {
                _schedulerStorageV9200.blockHash = blockHash;
                param = await _schedulerStorageV9200.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9190U)
            {
                _schedulerStorageV9190.blockHash = blockHash;
                param = await _schedulerStorageV9190.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9180U)
            {
                _schedulerStorageV9180.blockHash = blockHash;
                param = await _schedulerStorageV9180.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9170U)
            {
                _schedulerStorageV9170.blockHash = blockHash;
                param = await _schedulerStorageV9170.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9160U)
            {
                _schedulerStorageV9160.blockHash = blockHash;
                param = await _schedulerStorageV9160.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9151U)
            {
                _schedulerStorageV9151.blockHash = blockHash;
                param = await _schedulerStorageV9151.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9150U)
            {
                _schedulerStorageV9150.blockHash = blockHash;
                param = await _schedulerStorageV9150.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9130U)
            {
                _schedulerStorageV9130.blockHash = blockHash;
                param = await _schedulerStorageV9130.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9122U)
            {
                _schedulerStorageV9122.blockHash = blockHash;
                param = await _schedulerStorageV9122.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (version == 9111U)
            {
                _schedulerStorageV9111.blockHash = blockHash;
                param = await _schedulerStorageV9111.Lookup((Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersionParams
        ///  Storage version of the pallet.
        /// 
        ///  New networks start with last version.
        /// </summary>
        public static string StorageVersionParams(uint version)
        {
            string param = null;
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.StorageVersionParams();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.StorageVersionParams();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.StorageVersionParams();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.StorageVersionParams();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.StorageVersionParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersionDefault
        /// Default value as hex string
        /// </summary>
        public static string StorageVersionDefault(uint version)
        {
            string param = null;
            if (version == 9151U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage.StorageVersionDefault();
            if (version == 9150U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage.StorageVersionDefault();
            if (version == 9130U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage.StorageVersionDefault();
            if (version == 9122U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage.StorageVersionDefault();
            if (version == 9111U)
                param = Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage.StorageVersionDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersion
        ///  Storage version of the pallet.
        /// 
        ///  New networks start with last version.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum> StorageVersionAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum param = null;
            if (version == 9151U)
            {
                _schedulerStorageV9151.blockHash = blockHash;
                param = await _schedulerStorageV9151.StorageVersion(token);
            }

            if (version == 9150U)
            {
                _schedulerStorageV9150.blockHash = blockHash;
                param = await _schedulerStorageV9150.StorageVersion(token);
            }

            if (version == 9130U)
            {
                _schedulerStorageV9130.blockHash = blockHash;
                param = await _schedulerStorageV9130.StorageVersion(token);
            }

            if (version == 9122U)
            {
                _schedulerStorageV9122.blockHash = blockHash;
                param = await _schedulerStorageV9122.StorageVersion(token);
            }

            if (version == 9111U)
            {
                _schedulerStorageV9111.blockHash = blockHash;
                param = await _schedulerStorageV9111.StorageVersion(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public SchedulerStorage(SubstrateClientExt client)
        {
            _client = client;
            _schedulerStorageV9430 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerStorage(_client);
            _schedulerStorageV9420 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerStorage(_client);
            _schedulerStorageV9381 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerStorage(_client);
            _schedulerStorageV9370 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerStorage(_client);
            _schedulerStorageV9360 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerStorage(_client);
            _schedulerStorageV9350 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerStorage(_client);
            _schedulerStorageV9340 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerStorage(_client);
            _schedulerStorageV9320 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerStorage(_client);
            _schedulerStorageV9300 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerStorage(_client);
            _schedulerStorageV9291 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerStorage(_client);
            _schedulerStorageV9280 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerStorage(_client);
            _schedulerStorageV9271 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerStorage(_client);
            _schedulerStorageV9260 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerStorage(_client);
            _schedulerStorageV9250 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerStorage(_client);
            _schedulerStorageV9230 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerStorage(_client);
            _schedulerStorageV9220 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerStorage(_client);
            _schedulerStorageV9200 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerStorage(_client);
            _schedulerStorageV9190 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerStorage(_client);
            _schedulerStorageV9180 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerStorage(_client);
            _schedulerStorageV9170 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerStorage(_client);
            _schedulerStorageV9160 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerStorage(_client);
            _schedulerStorageV9151 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerStorage(_client);
            _schedulerStorageV9150 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerStorage(_client);
            _schedulerStorageV9130 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerStorage(_client);
            _schedulerStorageV9122 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerStorage(_client);
            _schedulerStorageV9111 = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerStorage(_client);
        }
    }

    public sealed class SchedulerConstants
    {
        /// <summary>
        /// >> MaximumWeight
        ///  The maximum weight that may be scheduled per block for any dispatchables.
        /// </summary>
        public IType MaximumWeight(uint version)
        {
            IType result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerConstants().MaximumWeight();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerConstants().MaximumWeight();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerConstants().MaximumWeight();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerConstants().MaximumWeight();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerConstants().MaximumWeight();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerConstants().MaximumWeight();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerConstants().MaximumWeight();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerConstants().MaximumWeight();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerConstants().MaximumWeight();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerConstants().MaximumWeight();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerConstants().MaximumWeight();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerConstants().MaximumWeight();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerConstants().MaximumWeight();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerConstants().MaximumWeight();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerConstants().MaximumWeight();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerConstants().MaximumWeight();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerConstants().MaximumWeight();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerConstants().MaximumWeight();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerConstants().MaximumWeight();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerConstants().MaximumWeight();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerConstants().MaximumWeight();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerConstants().MaximumWeight();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerConstants().MaximumWeight();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerConstants().MaximumWeight();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerConstants().MaximumWeight();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerConstants().MaximumWeight();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxScheduledPerBlock
        ///  The maximum number of scheduled calls in the queue for a single block.
        /// 
        ///  NOTE:
        ///  + Dependent pallets' benchmarks might require a higher limit for the setting. Set a
        ///  higher limit under `runtime-benchmarks` feature.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxScheduledPerBlock(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U32 result = null;
            if (version == 9430U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9430.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9420U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9420.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9381U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9381.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9370U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9370.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9360U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9360.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9350U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9350.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9340U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9340.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9320U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9320.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9300U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9300.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9291U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9291.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9280U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9280.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9271U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9271.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9260U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9260.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9250U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9250.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9230U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9230.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9220U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9220.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9200U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9200.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9190U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9190.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9180U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9180.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9170U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9170.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9160U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9160.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9151U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9151.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9150U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9150.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9130U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9130.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9122U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9122.SchedulerConstants().MaxScheduledPerBlock();
            if (version == 9111U)
                result = new Polkanalysis.Kusama.NetApiExt.Generated.Storage.v9111.SchedulerConstants().MaxScheduledPerBlock();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }
    }

    public enum SchedulerErrors
    {
        /// <summary>
        /// >> FailedToSchedule
        /// Failed to schedule a call
        /// </summary>
        FailedToSchedule,
        /// <summary>
        /// >> NotFound
        /// Cannot find the scheduled call.
        /// </summary>
        NotFound,
        /// <summary>
        /// >> TargetBlockNumberInPast
        /// Given target block number is in the past.
        /// </summary>
        TargetBlockNumberInPast,
        /// <summary>
        /// >> RescheduleNoChange
        /// Reschedule failed because it does not change scheduled time.
        /// </summary>
        RescheduleNoChange,
        /// <summary>
        /// >> Named
        /// Attempt to use a non-named function on a named task.
        /// </summary>
        Named
    }
}