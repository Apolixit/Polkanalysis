//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Storage
{
    public sealed class ParaSessionInfoStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9110
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage _paraSessionInfoStorageV9110;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage _paraSessionInfoStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9140
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage _paraSessionInfoStorageV9140;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage _paraSessionInfoStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage _paraSessionInfoStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage _paraSessionInfoStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage _paraSessionInfoStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage _paraSessionInfoStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage _paraSessionInfoStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage _paraSessionInfoStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage _paraSessionInfoStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage _paraSessionInfoStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9270
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage _paraSessionInfoStorageV9270;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage _paraSessionInfoStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9281
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage _paraSessionInfoStorageV9281;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage _paraSessionInfoStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage _paraSessionInfoStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage _paraSessionInfoStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage _paraSessionInfoStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage _paraSessionInfoStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage _paraSessionInfoStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage _paraSessionInfoStorageV9430;
        /// <summary>
        /// >> AssignmentKeysUnsafeParams
        ///  Assignment keys for the current session.
        ///  Note that this API is private due to it being prone to 'off-by-one' at session boundaries.
        ///  When in doubt, use `Sessions` API instead.
        /// </summary>
        public static string AssignmentKeysUnsafeParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.AssignmentKeysUnsafeParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AssignmentKeysUnsafeDefault
        /// Default value as hex string
        /// </summary>
        public static string AssignmentKeysUnsafeDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.AssignmentKeysUnsafeDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AssignmentKeysUnsafe
        ///  Assignment keys for the current session.
        ///  Note that this API is private due to it being prone to 'off-by-one' at session boundaries.
        ///  When in doubt, use `Sessions` API instead.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> AssignmentKeysUnsafeAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _paraSessionInfoStorageV9110.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9110.AssignmentKeysUnsafe(token);
            }

            if (version == 9122U)
            {
                _paraSessionInfoStorageV9122.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9122.AssignmentKeysUnsafe(token);
            }

            if (version == 9140U)
            {
                _paraSessionInfoStorageV9140.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9140.AssignmentKeysUnsafe(token);
            }

            if (version == 9151U)
            {
                _paraSessionInfoStorageV9151.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9151.AssignmentKeysUnsafe(token);
            }

            if (version == 9170U)
            {
                _paraSessionInfoStorageV9170.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9170.AssignmentKeysUnsafe(token);
            }

            if (version == 9180U)
            {
                _paraSessionInfoStorageV9180.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9180.AssignmentKeysUnsafe(token);
            }

            if (version == 9190U)
            {
                _paraSessionInfoStorageV9190.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9190.AssignmentKeysUnsafe(token);
            }

            if (version == 9200U)
            {
                _paraSessionInfoStorageV9200.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9200.AssignmentKeysUnsafe(token);
            }

            if (version == 9220U)
            {
                _paraSessionInfoStorageV9220.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9220.AssignmentKeysUnsafe(token);
            }

            if (version == 9230U)
            {
                _paraSessionInfoStorageV9230.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9230.AssignmentKeysUnsafe(token);
            }

            if (version == 9250U)
            {
                _paraSessionInfoStorageV9250.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9250.AssignmentKeysUnsafe(token);
            }

            if (version == 9260U)
            {
                _paraSessionInfoStorageV9260.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9260.AssignmentKeysUnsafe(token);
            }

            if (version == 9270U)
            {
                _paraSessionInfoStorageV9270.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9270.AssignmentKeysUnsafe(token);
            }

            if (version == 9280U)
            {
                _paraSessionInfoStorageV9280.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9280.AssignmentKeysUnsafe(token);
            }

            if (version == 9281U)
            {
                _paraSessionInfoStorageV9281.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9281.AssignmentKeysUnsafe(token);
            }

            if (version == 9291U)
            {
                _paraSessionInfoStorageV9291.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9291.AssignmentKeysUnsafe(token);
            }

            if (version == 9300U)
            {
                _paraSessionInfoStorageV9300.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9300.AssignmentKeysUnsafe(token);
            }

            if (version == 9340U)
            {
                _paraSessionInfoStorageV9340.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9340.AssignmentKeysUnsafe(token);
            }

            if (version == 9360U)
            {
                _paraSessionInfoStorageV9360.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9360.AssignmentKeysUnsafe(token);
            }

            if (version == 9370U)
            {
                _paraSessionInfoStorageV9370.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9370.AssignmentKeysUnsafe(token);
            }

            if (version == 9420U)
            {
                _paraSessionInfoStorageV9420.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9420.AssignmentKeysUnsafe(token);
            }

            if (version == 9430U)
            {
                _paraSessionInfoStorageV9430.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9430.AssignmentKeysUnsafe(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> EarliestStoredSessionParams
        ///  The earliest session for which previous session info is stored.
        /// </summary>
        public static string EarliestStoredSessionParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.EarliestStoredSessionParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> EarliestStoredSessionDefault
        /// Default value as hex string
        /// </summary>
        public static string EarliestStoredSessionDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.EarliestStoredSessionDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> EarliestStoredSession
        ///  The earliest session for which previous session info is stored.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> EarliestStoredSessionAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9110U)
            {
                _paraSessionInfoStorageV9110.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9110.EarliestStoredSession(token);
            }

            if (version == 9122U)
            {
                _paraSessionInfoStorageV9122.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9122.EarliestStoredSession(token);
            }

            if (version == 9140U)
            {
                _paraSessionInfoStorageV9140.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9140.EarliestStoredSession(token);
            }

            if (version == 9151U)
            {
                _paraSessionInfoStorageV9151.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9151.EarliestStoredSession(token);
            }

            if (version == 9170U)
            {
                _paraSessionInfoStorageV9170.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9170.EarliestStoredSession(token);
            }

            if (version == 9180U)
            {
                _paraSessionInfoStorageV9180.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9180.EarliestStoredSession(token);
            }

            if (version == 9190U)
            {
                _paraSessionInfoStorageV9190.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9190.EarliestStoredSession(token);
            }

            if (version == 9200U)
            {
                _paraSessionInfoStorageV9200.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9200.EarliestStoredSession(token);
            }

            if (version == 9220U)
            {
                _paraSessionInfoStorageV9220.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9220.EarliestStoredSession(token);
            }

            if (version == 9230U)
            {
                _paraSessionInfoStorageV9230.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9230.EarliestStoredSession(token);
            }

            if (version == 9250U)
            {
                _paraSessionInfoStorageV9250.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9250.EarliestStoredSession(token);
            }

            if (version == 9260U)
            {
                _paraSessionInfoStorageV9260.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9260.EarliestStoredSession(token);
            }

            if (version == 9270U)
            {
                _paraSessionInfoStorageV9270.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9270.EarliestStoredSession(token);
            }

            if (version == 9280U)
            {
                _paraSessionInfoStorageV9280.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9280.EarliestStoredSession(token);
            }

            if (version == 9281U)
            {
                _paraSessionInfoStorageV9281.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9281.EarliestStoredSession(token);
            }

            if (version == 9291U)
            {
                _paraSessionInfoStorageV9291.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9291.EarliestStoredSession(token);
            }

            if (version == 9300U)
            {
                _paraSessionInfoStorageV9300.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9300.EarliestStoredSession(token);
            }

            if (version == 9340U)
            {
                _paraSessionInfoStorageV9340.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9340.EarliestStoredSession(token);
            }

            if (version == 9360U)
            {
                _paraSessionInfoStorageV9360.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9360.EarliestStoredSession(token);
            }

            if (version == 9370U)
            {
                _paraSessionInfoStorageV9370.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9370.EarliestStoredSession(token);
            }

            if (version == 9420U)
            {
                _paraSessionInfoStorageV9420.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9420.EarliestStoredSession(token);
            }

            if (version == 9430U)
            {
                _paraSessionInfoStorageV9430.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9430.EarliestStoredSession(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> SessionsParams
        ///  Session information in a rolling window.
        ///  Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.
        ///  Does not have any entries before the session index in the first session change notification.
        /// </summary>
        public static string SessionsParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.SessionsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> SessionsDefault
        /// Default value as hex string
        /// </summary>
        public static string SessionsDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.SessionsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.SessionsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Sessions
        ///  Session information in a rolling window.
        ///  Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.
        ///  Does not have any entries before the session index in the first session change notification.
        /// </summary>
        public async Task<IType> SessionsAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            IType param = null;
            if (version == 9110U)
            {
                _paraSessionInfoStorageV9110.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9110.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9122U)
            {
                _paraSessionInfoStorageV9122.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9122.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9140U)
            {
                _paraSessionInfoStorageV9140.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9140.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9151U)
            {
                _paraSessionInfoStorageV9151.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9151.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9170U)
            {
                _paraSessionInfoStorageV9170.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9170.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9180U)
            {
                _paraSessionInfoStorageV9180.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9180.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9190U)
            {
                _paraSessionInfoStorageV9190.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9190.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9200U)
            {
                _paraSessionInfoStorageV9200.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9200.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9220U)
            {
                _paraSessionInfoStorageV9220.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9220.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9230U)
            {
                _paraSessionInfoStorageV9230.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9230.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9250U)
            {
                _paraSessionInfoStorageV9250.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9250.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9260U)
            {
                _paraSessionInfoStorageV9260.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9260.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9270U)
            {
                _paraSessionInfoStorageV9270.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9270.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9280U)
            {
                _paraSessionInfoStorageV9280.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9280.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9281U)
            {
                _paraSessionInfoStorageV9281.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9281.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9291U)
            {
                _paraSessionInfoStorageV9291.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9291.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9300U)
            {
                _paraSessionInfoStorageV9300.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9300.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9340U)
            {
                _paraSessionInfoStorageV9340.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9340.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9360U)
            {
                _paraSessionInfoStorageV9360.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9360.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9370U)
            {
                _paraSessionInfoStorageV9370.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9370.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9420U)
            {
                _paraSessionInfoStorageV9420.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9420.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9430U)
            {
                _paraSessionInfoStorageV9430.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9430.Sessions((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AccountKeysParams
        ///  The validator account keys of the validators actively participating in parachain consensus.
        /// </summary>
        public static string AccountKeysParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.AccountKeysParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AccountKeysDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountKeysDefault(uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.AccountKeysDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.AccountKeysDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AccountKeys
        ///  The validator account keys of the validators actively participating in parachain consensus.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> AccountKeysAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9230U)
            {
                _paraSessionInfoStorageV9230.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9230.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9250U)
            {
                _paraSessionInfoStorageV9250.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9250.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9260U)
            {
                _paraSessionInfoStorageV9260.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9260.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9270U)
            {
                _paraSessionInfoStorageV9270.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9270.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9280U)
            {
                _paraSessionInfoStorageV9280.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9280.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9281U)
            {
                _paraSessionInfoStorageV9281.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9281.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9291U)
            {
                _paraSessionInfoStorageV9291.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9291.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9300U)
            {
                _paraSessionInfoStorageV9300.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9300.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9340U)
            {
                _paraSessionInfoStorageV9340.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9340.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9360U)
            {
                _paraSessionInfoStorageV9360.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9360.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9370U)
            {
                _paraSessionInfoStorageV9370.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9370.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9420U)
            {
                _paraSessionInfoStorageV9420.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9420.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9430U)
            {
                _paraSessionInfoStorageV9430.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9430.AccountKeys((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> SessionExecutorParamsParams
        ///  Executor parameter set for a given session index
        /// </summary>
        public static string SessionExecutorParamsParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.SessionExecutorParamsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.SessionExecutorParamsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> SessionExecutorParamsDefault
        /// Default value as hex string
        /// </summary>
        public static string SessionExecutorParamsDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage.SessionExecutorParamsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage.SessionExecutorParamsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> SessionExecutorParams
        ///  Executor parameter set for a given session index
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_primitives.v4.executor_params.ExecutorParamsBase> SessionExecutorParamsAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_primitives.v4.executor_params.ExecutorParamsBase param = null;
            if (version == 9420U)
            {
                _paraSessionInfoStorageV9420.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9420.SessionExecutorParams((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (version == 9430U)
            {
                _paraSessionInfoStorageV9430.blockHash = blockHash;
                param = await _paraSessionInfoStorageV9430.SessionExecutorParams((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public ParaSessionInfoStorage(SubstrateClientExt client)
        {
            _client = client;
            _paraSessionInfoStorageV9110 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9122 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9140 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9151 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9170 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9180 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9190 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9200 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9220 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9230 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9250 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9260 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9270 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9280 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9281 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9291 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9300 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9340 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9360 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9370 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9420 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.ParaSessionInfoStorage(_client);
            _paraSessionInfoStorageV9430 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParaSessionInfoStorage(_client);
        }
    }

    public sealed class ParaSessionInfoConstants
    {
    }
}