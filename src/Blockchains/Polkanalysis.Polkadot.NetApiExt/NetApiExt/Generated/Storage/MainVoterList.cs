//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Storage
{
    public sealed class VoterListStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage _voterListStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage _voterListStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage _voterListStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9270
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage _voterListStorageV9270;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage _voterListStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9281
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage _voterListStorageV9281;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage _voterListStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage _voterListStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage _voterListStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage _voterListStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage _voterListStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage _voterListStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage _voterListStorageV9430;
        /// <summary>
        /// >> ListNodesParams
        ///  A single node, within some bag.
        /// 
        ///  Nodes store links forward and back within their respective bags.
        /// </summary>
        public static string ListNodesParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.ListNodesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ListNodesDefault
        /// Default value as hex string
        /// </summary>
        public static string ListNodesDefault(uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.ListNodesDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.ListNodesDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.ListNodesDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.ListNodesDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.ListNodesDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.ListNodesDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.ListNodesDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.ListNodesDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.ListNodesDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.ListNodesDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.ListNodesDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.ListNodesDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.ListNodesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ListNodes
        ///  A single node, within some bag.
        /// 
        ///  Nodes store links forward and back within their respective bags.
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.pallet_bags_list.list.NodeBase> ListNodesAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.pallet_bags_list.list.NodeBase param = null;
            if (version == 9230U)
            {
                _voterListStorageV9230.blockHash = blockHash;
                param = await _voterListStorageV9230.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _voterListStorageV9250.blockHash = blockHash;
                param = await _voterListStorageV9250.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _voterListStorageV9260.blockHash = blockHash;
                param = await _voterListStorageV9260.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9270U)
            {
                _voterListStorageV9270.blockHash = blockHash;
                param = await _voterListStorageV9270.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _voterListStorageV9280.blockHash = blockHash;
                param = await _voterListStorageV9280.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9281U)
            {
                _voterListStorageV9281.blockHash = blockHash;
                param = await _voterListStorageV9281.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _voterListStorageV9291.blockHash = blockHash;
                param = await _voterListStorageV9291.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _voterListStorageV9300.blockHash = blockHash;
                param = await _voterListStorageV9300.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _voterListStorageV9340.blockHash = blockHash;
                param = await _voterListStorageV9340.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _voterListStorageV9360.blockHash = blockHash;
                param = await _voterListStorageV9360.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _voterListStorageV9370.blockHash = blockHash;
                param = await _voterListStorageV9370.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _voterListStorageV9420.blockHash = blockHash;
                param = await _voterListStorageV9420.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _voterListStorageV9430.blockHash = blockHash;
                param = await _voterListStorageV9430.ListNodes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForListNodesParams
        /// Counter for the related counted storage map
        /// </summary>
        public static string CounterForListNodesParams(uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.CounterForListNodesParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.CounterForListNodesParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.CounterForListNodesParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.CounterForListNodesParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.CounterForListNodesParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.CounterForListNodesParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.CounterForListNodesParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.CounterForListNodesParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.CounterForListNodesParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.CounterForListNodesParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.CounterForListNodesParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.CounterForListNodesParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.CounterForListNodesParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForListNodesDefault
        /// Default value as hex string
        /// </summary>
        public static string CounterForListNodesDefault(uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.CounterForListNodesDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.CounterForListNodesDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.CounterForListNodesDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.CounterForListNodesDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.CounterForListNodesDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.CounterForListNodesDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.CounterForListNodesDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.CounterForListNodesDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.CounterForListNodesDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.CounterForListNodesDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.CounterForListNodesDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.CounterForListNodesDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.CounterForListNodesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CounterForListNodes
        /// Counter for the related counted storage map
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> CounterForListNodesAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9230U)
            {
                _voterListStorageV9230.blockHash = blockHash;
                param = await _voterListStorageV9230.CounterForListNodes(token);
            }

            if (version == 9250U)
            {
                _voterListStorageV9250.blockHash = blockHash;
                param = await _voterListStorageV9250.CounterForListNodes(token);
            }

            if (version == 9260U)
            {
                _voterListStorageV9260.blockHash = blockHash;
                param = await _voterListStorageV9260.CounterForListNodes(token);
            }

            if (version == 9270U)
            {
                _voterListStorageV9270.blockHash = blockHash;
                param = await _voterListStorageV9270.CounterForListNodes(token);
            }

            if (version == 9280U)
            {
                _voterListStorageV9280.blockHash = blockHash;
                param = await _voterListStorageV9280.CounterForListNodes(token);
            }

            if (version == 9281U)
            {
                _voterListStorageV9281.blockHash = blockHash;
                param = await _voterListStorageV9281.CounterForListNodes(token);
            }

            if (version == 9291U)
            {
                _voterListStorageV9291.blockHash = blockHash;
                param = await _voterListStorageV9291.CounterForListNodes(token);
            }

            if (version == 9300U)
            {
                _voterListStorageV9300.blockHash = blockHash;
                param = await _voterListStorageV9300.CounterForListNodes(token);
            }

            if (version == 9340U)
            {
                _voterListStorageV9340.blockHash = blockHash;
                param = await _voterListStorageV9340.CounterForListNodes(token);
            }

            if (version == 9360U)
            {
                _voterListStorageV9360.blockHash = blockHash;
                param = await _voterListStorageV9360.CounterForListNodes(token);
            }

            if (version == 9370U)
            {
                _voterListStorageV9370.blockHash = blockHash;
                param = await _voterListStorageV9370.CounterForListNodes(token);
            }

            if (version == 9420U)
            {
                _voterListStorageV9420.blockHash = blockHash;
                param = await _voterListStorageV9420.CounterForListNodes(token);
            }

            if (version == 9430U)
            {
                _voterListStorageV9430.blockHash = blockHash;
                param = await _voterListStorageV9430.CounterForListNodes(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ListBagsParams
        ///  A bag stored in storage.
        /// 
        ///  Stores a `Bag` struct, which stores head and tail pointers to itself.
        /// </summary>
        public static string ListBagsParams(Substrate.NetApi.Model.Types.Primitive.U64 key, uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.ListBagsParams((Substrate.NetApi.Model.Types.Primitive.U64)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ListBagsDefault
        /// Default value as hex string
        /// </summary>
        public static string ListBagsDefault(uint version)
        {
            string param = null;
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage.ListBagsDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage.ListBagsDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage.ListBagsDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage.ListBagsDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage.ListBagsDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage.ListBagsDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage.ListBagsDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage.ListBagsDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage.ListBagsDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage.ListBagsDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage.ListBagsDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage.ListBagsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage.ListBagsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ListBags
        ///  A bag stored in storage.
        /// 
        ///  Stores a `Bag` struct, which stores head and tail pointers to itself.
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.pallet_bags_list.list.BagBase> ListBagsAsync(Substrate.NetApi.Model.Types.Primitive.U64 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.pallet_bags_list.list.BagBase param = null;
            if (version == 9230U)
            {
                _voterListStorageV9230.blockHash = blockHash;
                param = await _voterListStorageV9230.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9250U)
            {
                _voterListStorageV9250.blockHash = blockHash;
                param = await _voterListStorageV9250.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9260U)
            {
                _voterListStorageV9260.blockHash = blockHash;
                param = await _voterListStorageV9260.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9270U)
            {
                _voterListStorageV9270.blockHash = blockHash;
                param = await _voterListStorageV9270.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9280U)
            {
                _voterListStorageV9280.blockHash = blockHash;
                param = await _voterListStorageV9280.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9281U)
            {
                _voterListStorageV9281.blockHash = blockHash;
                param = await _voterListStorageV9281.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9291U)
            {
                _voterListStorageV9291.blockHash = blockHash;
                param = await _voterListStorageV9291.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9300U)
            {
                _voterListStorageV9300.blockHash = blockHash;
                param = await _voterListStorageV9300.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9340U)
            {
                _voterListStorageV9340.blockHash = blockHash;
                param = await _voterListStorageV9340.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9360U)
            {
                _voterListStorageV9360.blockHash = blockHash;
                param = await _voterListStorageV9360.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9370U)
            {
                _voterListStorageV9370.blockHash = blockHash;
                param = await _voterListStorageV9370.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9420U)
            {
                _voterListStorageV9420.blockHash = blockHash;
                param = await _voterListStorageV9420.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (version == 9430U)
            {
                _voterListStorageV9430.blockHash = blockHash;
                param = await _voterListStorageV9430.ListBags((Substrate.NetApi.Model.Types.Primitive.U64)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public VoterListStorage(SubstrateClientExt client)
        {
            _client = client;
            _voterListStorageV9230 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListStorage(_client);
            _voterListStorageV9250 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListStorage(_client);
            _voterListStorageV9260 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListStorage(_client);
            _voterListStorageV9270 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListStorage(_client);
            _voterListStorageV9280 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListStorage(_client);
            _voterListStorageV9281 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListStorage(_client);
            _voterListStorageV9291 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListStorage(_client);
            _voterListStorageV9300 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListStorage(_client);
            _voterListStorageV9340 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListStorage(_client);
            _voterListStorageV9360 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListStorage(_client);
            _voterListStorageV9370 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListStorage(_client);
            _voterListStorageV9420 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListStorage(_client);
            _voterListStorageV9430 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListStorage(_client);
        }
    }

    public sealed class VoterListConstants
    {
        /// <summary>
        /// >> BagThresholds
        ///  The list of thresholds separating the various bags.
        /// 
        ///  Ids are separated into unsorted bags according to their score. This specifies the
        ///  thresholds separating the bags. An id's bag is the largest bag for which the id's score
        ///  is less than or equal to its upper threshold.
        /// 
        ///  When ids are iterated, higher bags are iterated completely before lower bags. This means
        ///  that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower
        ///  score, but peer ids within a particular bag are sorted in insertion order.
        /// 
        ///  # Expressing the constant
        /// 
        ///  This constant must be sorted in strictly increasing order. Duplicate items are not
        ///  permitted.
        /// 
        ///  There is an implied upper limit of `Score::MAX`; that value does not need to be
        ///  specified within the bag. For any two threshold lists, if one ends with
        ///  `Score::MAX`, the other one does not, and they are otherwise equal, the two
        ///  lists will behave identically.
        /// 
        ///  # Calculation
        /// 
        ///  It is recommended to generate the set of thresholds in a geometric series, such that
        ///  there exists some constant ratio such that `threshold[k + 1] == (threshold[k] *
        ///  constant_ratio).max(threshold[k] + 1)` for all `k`.
        /// 
        ///  The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.
        /// 
        ///  # Examples
        /// 
        ///  - If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and
        ///    iteration is strictly in insertion order.
        ///  - If `BagThresholds::get().len() == 64`, and the thresholds are determined according to
        ///    the procedure given above, then the constant ratio is equal to 2.
        ///  - If `BagThresholds::get().len() == 200`, and the thresholds are determined according to
        ///    the procedure given above, then the constant ratio is approximately equal to 1.248.
        ///  - If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall
        ///    into bag 0, an id with score 2 will fall into bag 1, etc.
        /// 
        ///  # Migration
        /// 
        ///  In the event that this list ever changes, a copy of the old bags list must be retained.
        ///  With that `List::migrate` can be called, which will perform the appropriate migration.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable BagThresholds(uint version)
        {
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable result = null;
            if (version == 9230U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.VoterListConstants().BagThresholds();
            if (version == 9250U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.VoterListConstants().BagThresholds();
            if (version == 9260U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.VoterListConstants().BagThresholds();
            if (version == 9270U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.VoterListConstants().BagThresholds();
            if (version == 9280U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.VoterListConstants().BagThresholds();
            if (version == 9281U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.VoterListConstants().BagThresholds();
            if (version == 9291U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.VoterListConstants().BagThresholds();
            if (version == 9300U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.VoterListConstants().BagThresholds();
            if (version == 9340U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.VoterListConstants().BagThresholds();
            if (version == 9360U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.VoterListConstants().BagThresholds();
            if (version == 9370U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.VoterListConstants().BagThresholds();
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.VoterListConstants().BagThresholds();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.VoterListConstants().BagThresholds();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }
    }

    public enum VoterListErrors
    {
        /// <summary>
        /// >> List
        /// A error in the list interface implementation.
        /// </summary>
        List
    }
}