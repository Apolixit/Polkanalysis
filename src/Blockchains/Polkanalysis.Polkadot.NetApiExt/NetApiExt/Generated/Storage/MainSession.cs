//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Storage
{
    public sealed class SessionStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9110
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage _sessionStorageV9110;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage _sessionStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9140
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage _sessionStorageV9140;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage _sessionStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage _sessionStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage _sessionStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage _sessionStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage _sessionStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage _sessionStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage _sessionStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage _sessionStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage _sessionStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9270
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage _sessionStorageV9270;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage _sessionStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9281
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage _sessionStorageV9281;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage _sessionStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage _sessionStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage _sessionStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage _sessionStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage _sessionStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage _sessionStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage _sessionStorageV9430;
        /// <summary>
        /// >> ValidatorsParams
        ///  The current set of validators.
        /// </summary>
        public static string ValidatorsParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.ValidatorsParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.ValidatorsParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.ValidatorsParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.ValidatorsParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.ValidatorsParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.ValidatorsParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.ValidatorsParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.ValidatorsParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.ValidatorsParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.ValidatorsParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.ValidatorsParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.ValidatorsParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.ValidatorsParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.ValidatorsParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.ValidatorsParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.ValidatorsParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.ValidatorsParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.ValidatorsParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.ValidatorsParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.ValidatorsParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.ValidatorsParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.ValidatorsParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ValidatorsDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorsDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.ValidatorsDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.ValidatorsDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.ValidatorsDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.ValidatorsDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.ValidatorsDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.ValidatorsDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.ValidatorsDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.ValidatorsDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.ValidatorsDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.ValidatorsDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.ValidatorsDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.ValidatorsDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.ValidatorsDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.ValidatorsDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.ValidatorsDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.ValidatorsDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.ValidatorsDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.ValidatorsDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.ValidatorsDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.ValidatorsDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.ValidatorsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.ValidatorsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Validators
        ///  The current set of validators.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> ValidatorsAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.Validators(token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.Validators(token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.Validators(token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.Validators(token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.Validators(token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.Validators(token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.Validators(token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.Validators(token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.Validators(token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.Validators(token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.Validators(token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.Validators(token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.Validators(token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.Validators(token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.Validators(token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.Validators(token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.Validators(token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.Validators(token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.Validators(token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.Validators(token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.Validators(token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.Validators(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CurrentIndexParams
        ///  Current index of the session.
        /// </summary>
        public static string CurrentIndexParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.CurrentIndexParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.CurrentIndexParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.CurrentIndexParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.CurrentIndexParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.CurrentIndexParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.CurrentIndexParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.CurrentIndexParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.CurrentIndexParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.CurrentIndexParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.CurrentIndexParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.CurrentIndexParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.CurrentIndexParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.CurrentIndexParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.CurrentIndexParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.CurrentIndexParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.CurrentIndexParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.CurrentIndexParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.CurrentIndexParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.CurrentIndexParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.CurrentIndexParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.CurrentIndexParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.CurrentIndexParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CurrentIndexDefault
        /// Default value as hex string
        /// </summary>
        public static string CurrentIndexDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.CurrentIndexDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.CurrentIndexDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.CurrentIndexDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.CurrentIndexDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.CurrentIndexDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.CurrentIndexDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.CurrentIndexDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.CurrentIndexDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.CurrentIndexDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.CurrentIndexDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.CurrentIndexDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.CurrentIndexDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.CurrentIndexDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.CurrentIndexDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.CurrentIndexDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.CurrentIndexDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.CurrentIndexDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.CurrentIndexDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.CurrentIndexDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.CurrentIndexDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.CurrentIndexDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.CurrentIndexDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> CurrentIndex
        ///  Current index of the session.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> CurrentIndexAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.CurrentIndex(token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.CurrentIndex(token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.CurrentIndex(token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.CurrentIndex(token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.CurrentIndex(token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.CurrentIndex(token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.CurrentIndex(token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.CurrentIndex(token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.CurrentIndex(token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.CurrentIndex(token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.CurrentIndex(token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.CurrentIndex(token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.CurrentIndex(token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.CurrentIndex(token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.CurrentIndex(token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.CurrentIndex(token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.CurrentIndex(token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.CurrentIndex(token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.CurrentIndex(token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.CurrentIndex(token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.CurrentIndex(token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.CurrentIndex(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedChangedParams
        ///  True if the underlying economic identities or weighting behind the validators
        ///  has changed in the queued validator set.
        /// </summary>
        public static string QueuedChangedParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.QueuedChangedParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.QueuedChangedParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.QueuedChangedParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.QueuedChangedParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.QueuedChangedParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.QueuedChangedParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.QueuedChangedParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.QueuedChangedParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.QueuedChangedParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.QueuedChangedParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.QueuedChangedParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.QueuedChangedParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.QueuedChangedParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.QueuedChangedParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.QueuedChangedParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.QueuedChangedParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.QueuedChangedParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.QueuedChangedParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.QueuedChangedParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.QueuedChangedParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.QueuedChangedParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.QueuedChangedParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedChangedDefault
        /// Default value as hex string
        /// </summary>
        public static string QueuedChangedDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.QueuedChangedDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.QueuedChangedDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.QueuedChangedDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.QueuedChangedDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.QueuedChangedDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.QueuedChangedDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.QueuedChangedDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.QueuedChangedDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.QueuedChangedDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.QueuedChangedDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.QueuedChangedDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.QueuedChangedDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.QueuedChangedDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.QueuedChangedDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.QueuedChangedDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.QueuedChangedDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.QueuedChangedDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.QueuedChangedDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.QueuedChangedDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.QueuedChangedDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.QueuedChangedDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.QueuedChangedDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedChanged
        ///  True if the underlying economic identities or weighting behind the validators
        ///  has changed in the queued validator set.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> QueuedChangedAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.Bool param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.QueuedChanged(token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.QueuedChanged(token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.QueuedChanged(token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.QueuedChanged(token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.QueuedChanged(token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.QueuedChanged(token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.QueuedChanged(token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.QueuedChanged(token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.QueuedChanged(token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.QueuedChanged(token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.QueuedChanged(token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.QueuedChanged(token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.QueuedChanged(token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.QueuedChanged(token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.QueuedChanged(token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.QueuedChanged(token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.QueuedChanged(token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.QueuedChanged(token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.QueuedChanged(token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.QueuedChanged(token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.QueuedChanged(token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.QueuedChanged(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedKeysParams
        ///  The queued keys for the next session. When the next session begins, these keys
        ///  will be used to determine the validator's session keys.
        /// </summary>
        public static string QueuedKeysParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.QueuedKeysParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.QueuedKeysParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.QueuedKeysParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.QueuedKeysParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.QueuedKeysParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.QueuedKeysParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.QueuedKeysParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.QueuedKeysParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.QueuedKeysParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.QueuedKeysParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.QueuedKeysParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.QueuedKeysParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.QueuedKeysParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.QueuedKeysParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.QueuedKeysParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.QueuedKeysParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.QueuedKeysParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.QueuedKeysParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.QueuedKeysParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.QueuedKeysParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.QueuedKeysParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.QueuedKeysParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedKeysDefault
        /// Default value as hex string
        /// </summary>
        public static string QueuedKeysDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.QueuedKeysDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.QueuedKeysDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.QueuedKeysDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.QueuedKeysDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.QueuedKeysDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.QueuedKeysDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.QueuedKeysDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.QueuedKeysDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.QueuedKeysDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.QueuedKeysDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.QueuedKeysDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.QueuedKeysDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.QueuedKeysDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.QueuedKeysDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.QueuedKeysDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.QueuedKeysDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.QueuedKeysDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.QueuedKeysDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.QueuedKeysDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.QueuedKeysDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.QueuedKeysDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.QueuedKeysDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> QueuedKeys
        ///  The queued keys for the next session. When the next session begins, these keys
        ///  will be used to determine the validator's session keys.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> QueuedKeysAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.QueuedKeys(token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.QueuedKeys(token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.QueuedKeys(token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.QueuedKeys(token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.QueuedKeys(token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.QueuedKeys(token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.QueuedKeys(token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.QueuedKeys(token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.QueuedKeys(token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.QueuedKeys(token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.QueuedKeys(token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.QueuedKeys(token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.QueuedKeys(token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.QueuedKeys(token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.QueuedKeys(token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.QueuedKeys(token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.QueuedKeys(token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.QueuedKeys(token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.QueuedKeys(token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.QueuedKeys(token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.QueuedKeys(token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.QueuedKeys(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> DisabledValidatorsParams
        ///  Indices of disabled validators.
        /// 
        ///  The set is cleared when `on_session_ending` returns a new set of identities.
        /// </summary>
        public static string DisabledValidatorsParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.DisabledValidatorsParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.DisabledValidatorsParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.DisabledValidatorsParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.DisabledValidatorsParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.DisabledValidatorsParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.DisabledValidatorsParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.DisabledValidatorsParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.DisabledValidatorsParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.DisabledValidatorsParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.DisabledValidatorsParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.DisabledValidatorsParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.DisabledValidatorsParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.DisabledValidatorsParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.DisabledValidatorsParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.DisabledValidatorsParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.DisabledValidatorsParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.DisabledValidatorsParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.DisabledValidatorsParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.DisabledValidatorsParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.DisabledValidatorsParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.DisabledValidatorsParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.DisabledValidatorsParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> DisabledValidatorsDefault
        /// Default value as hex string
        /// </summary>
        public static string DisabledValidatorsDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.DisabledValidatorsDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.DisabledValidatorsDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.DisabledValidatorsDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.DisabledValidatorsDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.DisabledValidatorsDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.DisabledValidatorsDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.DisabledValidatorsDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.DisabledValidatorsDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.DisabledValidatorsDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.DisabledValidatorsDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.DisabledValidatorsDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.DisabledValidatorsDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.DisabledValidatorsDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.DisabledValidatorsDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.DisabledValidatorsDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.DisabledValidatorsDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.DisabledValidatorsDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.DisabledValidatorsDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.DisabledValidatorsDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.DisabledValidatorsDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.DisabledValidatorsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.DisabledValidatorsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> DisabledValidators
        ///  Indices of disabled validators.
        /// 
        ///  The set is cleared when `on_session_ending` returns a new set of identities.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> DisabledValidatorsAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.DisabledValidators(token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.DisabledValidators(token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.DisabledValidators(token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.DisabledValidators(token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.DisabledValidators(token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.DisabledValidators(token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.DisabledValidators(token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.DisabledValidators(token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.DisabledValidators(token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.DisabledValidators(token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.DisabledValidators(token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.DisabledValidators(token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.DisabledValidators(token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.DisabledValidators(token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.DisabledValidators(token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.DisabledValidators(token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.DisabledValidators(token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.DisabledValidators(token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.DisabledValidators(token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.DisabledValidators(token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.DisabledValidators(token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.DisabledValidators(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextKeysParams
        ///  The next session keys for a validator.
        /// </summary>
        public static string NextKeysParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.NextKeysParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextKeysDefault
        /// Default value as hex string
        /// </summary>
        public static string NextKeysDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.NextKeysDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.NextKeysDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.NextKeysDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.NextKeysDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.NextKeysDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.NextKeysDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.NextKeysDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.NextKeysDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.NextKeysDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.NextKeysDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.NextKeysDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.NextKeysDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.NextKeysDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.NextKeysDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.NextKeysDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.NextKeysDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.NextKeysDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.NextKeysDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.NextKeysDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.NextKeysDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.NextKeysDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.NextKeysDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> NextKeys
        ///  The next session keys for a validator.
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_runtime.SessionKeysBase> NextKeysAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_runtime.SessionKeysBase param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.NextKeys((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> KeyOwnerParams
        ///  The owner of a key. The key is the `KeyTypeId` + the encoded key.
        /// </summary>
        public static string KeyOwnerParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.KeyOwnerParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> KeyOwnerDefault
        /// Default value as hex string
        /// </summary>
        public static string KeyOwnerDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage.KeyOwnerDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage.KeyOwnerDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage.KeyOwnerDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage.KeyOwnerDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage.KeyOwnerDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage.KeyOwnerDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage.KeyOwnerDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage.KeyOwnerDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage.KeyOwnerDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage.KeyOwnerDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage.KeyOwnerDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage.KeyOwnerDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage.KeyOwnerDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage.KeyOwnerDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage.KeyOwnerDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage.KeyOwnerDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage.KeyOwnerDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage.KeyOwnerDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage.KeyOwnerDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage.KeyOwnerDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage.KeyOwnerDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage.KeyOwnerDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> KeyOwner
        ///  The owner of a key. The key is the `KeyTypeId` + the encoded key.
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base> KeyOwnerAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base param = null;
            if (version == 9110U)
            {
                _sessionStorageV9110.blockHash = blockHash;
                param = await _sessionStorageV9110.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9122U)
            {
                _sessionStorageV9122.blockHash = blockHash;
                param = await _sessionStorageV9122.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9140U)
            {
                _sessionStorageV9140.blockHash = blockHash;
                param = await _sessionStorageV9140.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9151U)
            {
                _sessionStorageV9151.blockHash = blockHash;
                param = await _sessionStorageV9151.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9170U)
            {
                _sessionStorageV9170.blockHash = blockHash;
                param = await _sessionStorageV9170.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9180U)
            {
                _sessionStorageV9180.blockHash = blockHash;
                param = await _sessionStorageV9180.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9190U)
            {
                _sessionStorageV9190.blockHash = blockHash;
                param = await _sessionStorageV9190.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9200U)
            {
                _sessionStorageV9200.blockHash = blockHash;
                param = await _sessionStorageV9200.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9220U)
            {
                _sessionStorageV9220.blockHash = blockHash;
                param = await _sessionStorageV9220.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9230U)
            {
                _sessionStorageV9230.blockHash = blockHash;
                param = await _sessionStorageV9230.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9250U)
            {
                _sessionStorageV9250.blockHash = blockHash;
                param = await _sessionStorageV9250.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9260U)
            {
                _sessionStorageV9260.blockHash = blockHash;
                param = await _sessionStorageV9260.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9270U)
            {
                _sessionStorageV9270.blockHash = blockHash;
                param = await _sessionStorageV9270.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9280U)
            {
                _sessionStorageV9280.blockHash = blockHash;
                param = await _sessionStorageV9280.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9281U)
            {
                _sessionStorageV9281.blockHash = blockHash;
                param = await _sessionStorageV9281.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9291U)
            {
                _sessionStorageV9291.blockHash = blockHash;
                param = await _sessionStorageV9291.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9300U)
            {
                _sessionStorageV9300.blockHash = blockHash;
                param = await _sessionStorageV9300.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9340U)
            {
                _sessionStorageV9340.blockHash = blockHash;
                param = await _sessionStorageV9340.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9360U)
            {
                _sessionStorageV9360.blockHash = blockHash;
                param = await _sessionStorageV9360.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9370U)
            {
                _sessionStorageV9370.blockHash = blockHash;
                param = await _sessionStorageV9370.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9420U)
            {
                _sessionStorageV9420.blockHash = blockHash;
                param = await _sessionStorageV9420.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (version == 9430U)
            {
                _sessionStorageV9430.blockHash = blockHash;
                param = await _sessionStorageV9430.KeyOwner((Substrate.NetApi.Model.Types.Base.BaseTuple<Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.KeyTypeId, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public SessionStorage(SubstrateClientExt client)
        {
            _client = client;
            _sessionStorageV9110 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.SessionStorage(_client);
            _sessionStorageV9122 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.SessionStorage(_client);
            _sessionStorageV9140 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.SessionStorage(_client);
            _sessionStorageV9151 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.SessionStorage(_client);
            _sessionStorageV9170 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.SessionStorage(_client);
            _sessionStorageV9180 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.SessionStorage(_client);
            _sessionStorageV9190 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.SessionStorage(_client);
            _sessionStorageV9200 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.SessionStorage(_client);
            _sessionStorageV9220 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.SessionStorage(_client);
            _sessionStorageV9230 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.SessionStorage(_client);
            _sessionStorageV9250 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.SessionStorage(_client);
            _sessionStorageV9260 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.SessionStorage(_client);
            _sessionStorageV9270 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.SessionStorage(_client);
            _sessionStorageV9280 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.SessionStorage(_client);
            _sessionStorageV9281 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.SessionStorage(_client);
            _sessionStorageV9291 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.SessionStorage(_client);
            _sessionStorageV9300 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.SessionStorage(_client);
            _sessionStorageV9340 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.SessionStorage(_client);
            _sessionStorageV9360 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.SessionStorage(_client);
            _sessionStorageV9370 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.SessionStorage(_client);
            _sessionStorageV9420 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.SessionStorage(_client);
            _sessionStorageV9430 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.SessionStorage(_client);
        }
    }

    public sealed class SessionConstants
    {
    }

    public enum SessionErrors
    {
        /// <summary>
        /// >> InvalidProof
        /// Invalid ownership proof.
        /// </summary>
        InvalidProof,
        /// <summary>
        /// >> NoAssociatedValidatorId
        /// No associated validator ID for account.
        /// </summary>
        NoAssociatedValidatorId,
        /// <summary>
        /// >> DuplicatedKey
        /// Registered duplicate key.
        /// </summary>
        DuplicatedKey,
        /// <summary>
        /// >> NoKeys
        /// No keys are associated with this account.
        /// </summary>
        NoKeys,
        /// <summary>
        /// >> NoAccount
        /// Key setting account is not live, so it's impossible to associate keys.
        /// </summary>
        NoAccount
    }
}