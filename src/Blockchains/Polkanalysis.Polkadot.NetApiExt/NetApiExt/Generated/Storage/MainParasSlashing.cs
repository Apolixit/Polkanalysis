//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Storage
{
    public sealed class ParasSlashingStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage _parasSlashingStorageV9430;
        /// <summary>
        /// >> UnappliedSlashesParams
        ///  Validators pending dispute slashes.
        /// </summary>
        public static string UnappliedSlashesParams(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage.UnappliedSlashesParams((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.polkadot_core_primitives.CandidateHash>)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> UnappliedSlashesDefault
        /// Default value as hex string
        /// </summary>
        public static string UnappliedSlashesDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage.UnappliedSlashesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> UnappliedSlashes
        ///  Validators pending dispute slashes.
        /// </summary>
        public async Task<Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_runtime_parachains.disputes.slashing.PendingSlashesBase> UnappliedSlashesAsync(Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.polkadot_runtime_parachains.disputes.slashing.PendingSlashesBase param = null;
            if (version == 9430U)
            {
                _parasSlashingStorageV9430.blockHash = blockHash;
                param = await _parasSlashingStorageV9430.UnappliedSlashes((Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.polkadot_core_primitives.CandidateHash>)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ValidatorSetCountsParams
        ///  `ValidatorSetCount` per session.
        /// </summary>
        public static string ValidatorSetCountsParams(Substrate.NetApi.Model.Types.Primitive.U32 key, uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage.ValidatorSetCountsParams((Substrate.NetApi.Model.Types.Primitive.U32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ValidatorSetCountsDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorSetCountsDefault(uint version)
        {
            string param = null;
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage.ValidatorSetCountsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ValidatorSetCounts
        ///  `ValidatorSetCount` per session.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> ValidatorSetCountsAsync(Substrate.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U32 param = null;
            if (version == 9430U)
            {
                _parasSlashingStorageV9430.blockHash = blockHash;
                param = await _parasSlashingStorageV9430.ValidatorSetCounts((Substrate.NetApi.Model.Types.Primitive.U32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public ParasSlashingStorage(SubstrateClientExt client)
        {
            _client = client;
            _parasSlashingStorageV9430 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.ParasSlashingStorage(_client);
        }
    }

    public sealed class ParasSlashingConstants
    {
    }

    public enum ParasSlashingErrors
    {
        /// <summary>
        /// >> InvalidKeyOwnershipProof
        /// The key ownership proof is invalid.
        /// </summary>
        InvalidKeyOwnershipProof,
        /// <summary>
        /// >> InvalidSessionIndex
        /// The session index is too old or invalid.
        /// </summary>
        InvalidSessionIndex,
        /// <summary>
        /// >> InvalidCandidateHash
        /// The candidate hash is invalid.
        /// </summary>
        InvalidCandidateHash,
        /// <summary>
        /// >> InvalidValidatorIndex
        /// There is no pending slash for the given validator index and time
        /// slot.
        /// </summary>
        InvalidValidatorIndex,
        /// <summary>
        /// >> ValidatorIndexIdMismatch
        /// The validator index does not match the validator id.
        /// </summary>
        ValidatorIndexIdMismatch,
        /// <summary>
        /// >> DuplicateSlashingReport
        /// The given slashing report is valid but already previously reported.
        /// </summary>
        DuplicateSlashingReport
    }
}