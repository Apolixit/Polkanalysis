//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading.Tasks;
using Substrate.NetApi.Model.Meta;
using System.Threading;
using Substrate.NetApi;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Extrinsics;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Storage
{
    public sealed class BalancesStorage
    {
        /// <summary>
        /// Substrate client for the storage calls.
        /// </summary>
        private SubstrateClientExt _client;
        public string blockHash { get; set; } = null;

        public async Task<uint> GetVersionAsync(CancellationToken token)
        {
            var result = await _client.State.GetRuntimeVersionAtAsync(blockHash, token);
            return result.SpecVersion;
        }

        /// <summary>
        /// Storage for SpecVersion 9110
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage _balancesStorageV9110;
        /// <summary>
        /// Storage for SpecVersion 9122
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage _balancesStorageV9122;
        /// <summary>
        /// Storage for SpecVersion 9140
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage _balancesStorageV9140;
        /// <summary>
        /// Storage for SpecVersion 9151
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage _balancesStorageV9151;
        /// <summary>
        /// Storage for SpecVersion 9170
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage _balancesStorageV9170;
        /// <summary>
        /// Storage for SpecVersion 9180
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage _balancesStorageV9180;
        /// <summary>
        /// Storage for SpecVersion 9190
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage _balancesStorageV9190;
        /// <summary>
        /// Storage for SpecVersion 9200
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage _balancesStorageV9200;
        /// <summary>
        /// Storage for SpecVersion 9220
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage _balancesStorageV9220;
        /// <summary>
        /// Storage for SpecVersion 9230
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage _balancesStorageV9230;
        /// <summary>
        /// Storage for SpecVersion 9250
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage _balancesStorageV9250;
        /// <summary>
        /// Storage for SpecVersion 9260
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage _balancesStorageV9260;
        /// <summary>
        /// Storage for SpecVersion 9270
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage _balancesStorageV9270;
        /// <summary>
        /// Storage for SpecVersion 9280
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage _balancesStorageV9280;
        /// <summary>
        /// Storage for SpecVersion 9281
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage _balancesStorageV9281;
        /// <summary>
        /// Storage for SpecVersion 9291
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage _balancesStorageV9291;
        /// <summary>
        /// Storage for SpecVersion 9300
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage _balancesStorageV9300;
        /// <summary>
        /// Storage for SpecVersion 9340
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage _balancesStorageV9340;
        /// <summary>
        /// Storage for SpecVersion 9360
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage _balancesStorageV9360;
        /// <summary>
        /// Storage for SpecVersion 9370
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage _balancesStorageV9370;
        /// <summary>
        /// Storage for SpecVersion 9420
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage _balancesStorageV9420;
        /// <summary>
        /// Storage for SpecVersion 9430
        /// </summary>
        private Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage _balancesStorageV9430;
        /// <summary>
        /// >> TotalIssuanceParams
        ///  The total units issued in the system.
        /// </summary>
        public static string TotalIssuanceParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.TotalIssuanceParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.TotalIssuanceParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.TotalIssuanceParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.TotalIssuanceParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.TotalIssuanceParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.TotalIssuanceParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.TotalIssuanceParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.TotalIssuanceParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.TotalIssuanceParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.TotalIssuanceParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.TotalIssuanceParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.TotalIssuanceParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.TotalIssuanceParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.TotalIssuanceParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.TotalIssuanceParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.TotalIssuanceParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.TotalIssuanceParams();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.TotalIssuanceParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.TotalIssuanceParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.TotalIssuanceParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.TotalIssuanceParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.TotalIssuanceParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> TotalIssuanceDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalIssuanceDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.TotalIssuanceDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.TotalIssuanceDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.TotalIssuanceDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.TotalIssuanceDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.TotalIssuanceDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.TotalIssuanceDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.TotalIssuanceDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.TotalIssuanceDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.TotalIssuanceDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.TotalIssuanceDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.TotalIssuanceDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.TotalIssuanceDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.TotalIssuanceDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.TotalIssuanceDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.TotalIssuanceDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.TotalIssuanceDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.TotalIssuanceDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.TotalIssuanceDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.TotalIssuanceDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.TotalIssuanceDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.TotalIssuanceDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.TotalIssuanceDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> TotalIssuance
        ///  The total units issued in the system.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U128> TotalIssuanceAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U128 param = null;
            if (version == 9110U)
            {
                _balancesStorageV9110.blockHash = blockHash;
                param = await _balancesStorageV9110.TotalIssuance(token);
            }

            if (version == 9122U)
            {
                _balancesStorageV9122.blockHash = blockHash;
                param = await _balancesStorageV9122.TotalIssuance(token);
            }

            if (version == 9140U)
            {
                _balancesStorageV9140.blockHash = blockHash;
                param = await _balancesStorageV9140.TotalIssuance(token);
            }

            if (version == 9151U)
            {
                _balancesStorageV9151.blockHash = blockHash;
                param = await _balancesStorageV9151.TotalIssuance(token);
            }

            if (version == 9170U)
            {
                _balancesStorageV9170.blockHash = blockHash;
                param = await _balancesStorageV9170.TotalIssuance(token);
            }

            if (version == 9180U)
            {
                _balancesStorageV9180.blockHash = blockHash;
                param = await _balancesStorageV9180.TotalIssuance(token);
            }

            if (version == 9190U)
            {
                _balancesStorageV9190.blockHash = blockHash;
                param = await _balancesStorageV9190.TotalIssuance(token);
            }

            if (version == 9200U)
            {
                _balancesStorageV9200.blockHash = blockHash;
                param = await _balancesStorageV9200.TotalIssuance(token);
            }

            if (version == 9220U)
            {
                _balancesStorageV9220.blockHash = blockHash;
                param = await _balancesStorageV9220.TotalIssuance(token);
            }

            if (version == 9230U)
            {
                _balancesStorageV9230.blockHash = blockHash;
                param = await _balancesStorageV9230.TotalIssuance(token);
            }

            if (version == 9250U)
            {
                _balancesStorageV9250.blockHash = blockHash;
                param = await _balancesStorageV9250.TotalIssuance(token);
            }

            if (version == 9260U)
            {
                _balancesStorageV9260.blockHash = blockHash;
                param = await _balancesStorageV9260.TotalIssuance(token);
            }

            if (version == 9270U)
            {
                _balancesStorageV9270.blockHash = blockHash;
                param = await _balancesStorageV9270.TotalIssuance(token);
            }

            if (version == 9280U)
            {
                _balancesStorageV9280.blockHash = blockHash;
                param = await _balancesStorageV9280.TotalIssuance(token);
            }

            if (version == 9281U)
            {
                _balancesStorageV9281.blockHash = blockHash;
                param = await _balancesStorageV9281.TotalIssuance(token);
            }

            if (version == 9291U)
            {
                _balancesStorageV9291.blockHash = blockHash;
                param = await _balancesStorageV9291.TotalIssuance(token);
            }

            if (version == 9300U)
            {
                _balancesStorageV9300.blockHash = blockHash;
                param = await _balancesStorageV9300.TotalIssuance(token);
            }

            if (version == 9340U)
            {
                _balancesStorageV9340.blockHash = blockHash;
                param = await _balancesStorageV9340.TotalIssuance(token);
            }

            if (version == 9360U)
            {
                _balancesStorageV9360.blockHash = blockHash;
                param = await _balancesStorageV9360.TotalIssuance(token);
            }

            if (version == 9370U)
            {
                _balancesStorageV9370.blockHash = blockHash;
                param = await _balancesStorageV9370.TotalIssuance(token);
            }

            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.TotalIssuance(token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.TotalIssuance(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AccountParams
        ///  The balance of an account.
        /// 
        ///  NOTE: This is only used in the case that this pallet is used to store balances.
        /// </summary>
        public static string AccountParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.AccountParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> AccountDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.AccountDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.AccountDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.AccountDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.AccountDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.AccountDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.AccountDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.AccountDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.AccountDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.AccountDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.AccountDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.AccountDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.AccountDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.AccountDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.AccountDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.AccountDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.AccountDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.AccountDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.AccountDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.AccountDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.AccountDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.AccountDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.AccountDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Account
        ///  The balance of an account.
        /// 
        ///  NOTE: This is only used in the case that this pallet is used to store balances.
        /// </summary>
        public async Task<IType> AccountAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            IType param = null;
            if (version == 9110U)
            {
                _balancesStorageV9110.blockHash = blockHash;
                param = await _balancesStorageV9110.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _balancesStorageV9122.blockHash = blockHash;
                param = await _balancesStorageV9122.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9140U)
            {
                _balancesStorageV9140.blockHash = blockHash;
                param = await _balancesStorageV9140.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _balancesStorageV9151.blockHash = blockHash;
                param = await _balancesStorageV9151.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _balancesStorageV9170.blockHash = blockHash;
                param = await _balancesStorageV9170.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _balancesStorageV9180.blockHash = blockHash;
                param = await _balancesStorageV9180.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _balancesStorageV9190.blockHash = blockHash;
                param = await _balancesStorageV9190.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _balancesStorageV9200.blockHash = blockHash;
                param = await _balancesStorageV9200.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _balancesStorageV9220.blockHash = blockHash;
                param = await _balancesStorageV9220.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _balancesStorageV9230.blockHash = blockHash;
                param = await _balancesStorageV9230.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _balancesStorageV9250.blockHash = blockHash;
                param = await _balancesStorageV9250.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _balancesStorageV9260.blockHash = blockHash;
                param = await _balancesStorageV9260.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9270U)
            {
                _balancesStorageV9270.blockHash = blockHash;
                param = await _balancesStorageV9270.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _balancesStorageV9280.blockHash = blockHash;
                param = await _balancesStorageV9280.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9281U)
            {
                _balancesStorageV9281.blockHash = blockHash;
                param = await _balancesStorageV9281.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _balancesStorageV9291.blockHash = blockHash;
                param = await _balancesStorageV9291.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _balancesStorageV9300.blockHash = blockHash;
                param = await _balancesStorageV9300.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _balancesStorageV9340.blockHash = blockHash;
                param = await _balancesStorageV9340.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _balancesStorageV9360.blockHash = blockHash;
                param = await _balancesStorageV9360.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _balancesStorageV9370.blockHash = blockHash;
                param = await _balancesStorageV9370.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.Account((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> LocksParams
        ///  Any liquidity locks on some account balances.
        ///  NOTE: Should only be accessed when setting, changing and freeing a lock.
        /// </summary>
        public static string LocksParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.LocksParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> LocksDefault
        /// Default value as hex string
        /// </summary>
        public static string LocksDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.LocksDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.LocksDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.LocksDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.LocksDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.LocksDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.LocksDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.LocksDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.LocksDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.LocksDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.LocksDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.LocksDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.LocksDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.LocksDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.LocksDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.LocksDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.LocksDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.LocksDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.LocksDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.LocksDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.LocksDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.LocksDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.LocksDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Locks
        ///  Any liquidity locks on some account balances.
        ///  NOTE: Should only be accessed when setting, changing and freeing a lock.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> LocksAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _balancesStorageV9110.blockHash = blockHash;
                param = await _balancesStorageV9110.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _balancesStorageV9122.blockHash = blockHash;
                param = await _balancesStorageV9122.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9140U)
            {
                _balancesStorageV9140.blockHash = blockHash;
                param = await _balancesStorageV9140.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _balancesStorageV9151.blockHash = blockHash;
                param = await _balancesStorageV9151.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _balancesStorageV9170.blockHash = blockHash;
                param = await _balancesStorageV9170.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _balancesStorageV9180.blockHash = blockHash;
                param = await _balancesStorageV9180.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _balancesStorageV9190.blockHash = blockHash;
                param = await _balancesStorageV9190.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _balancesStorageV9200.blockHash = blockHash;
                param = await _balancesStorageV9200.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _balancesStorageV9220.blockHash = blockHash;
                param = await _balancesStorageV9220.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _balancesStorageV9230.blockHash = blockHash;
                param = await _balancesStorageV9230.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _balancesStorageV9250.blockHash = blockHash;
                param = await _balancesStorageV9250.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _balancesStorageV9260.blockHash = blockHash;
                param = await _balancesStorageV9260.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9270U)
            {
                _balancesStorageV9270.blockHash = blockHash;
                param = await _balancesStorageV9270.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _balancesStorageV9280.blockHash = blockHash;
                param = await _balancesStorageV9280.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9281U)
            {
                _balancesStorageV9281.blockHash = blockHash;
                param = await _balancesStorageV9281.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _balancesStorageV9291.blockHash = blockHash;
                param = await _balancesStorageV9291.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _balancesStorageV9300.blockHash = blockHash;
                param = await _balancesStorageV9300.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _balancesStorageV9340.blockHash = blockHash;
                param = await _balancesStorageV9340.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _balancesStorageV9360.blockHash = blockHash;
                param = await _balancesStorageV9360.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _balancesStorageV9370.blockHash = blockHash;
                param = await _balancesStorageV9370.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.Locks((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ReservesParams
        ///  Named reserves on some account balances.
        /// </summary>
        public static string ReservesParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key);
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key);
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key);
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key);
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key);
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key);
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key);
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key);
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key);
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key);
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key);
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key);
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key);
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key);
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key);
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key);
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key);
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key);
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key);
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key);
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.ReservesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> ReservesDefault
        /// Default value as hex string
        /// </summary>
        public static string ReservesDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.ReservesDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.ReservesDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.ReservesDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.ReservesDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.ReservesDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.ReservesDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.ReservesDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.ReservesDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.ReservesDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.ReservesDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.ReservesDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.ReservesDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.ReservesDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.ReservesDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.ReservesDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.ReservesDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.ReservesDefault();
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.ReservesDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.ReservesDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.ReservesDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.ReservesDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.ReservesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Reserves
        ///  Named reserves on some account balances.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> ReservesAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9110U)
            {
                _balancesStorageV9110.blockHash = blockHash;
                param = await _balancesStorageV9110.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9110.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9122U)
            {
                _balancesStorageV9122.blockHash = blockHash;
                param = await _balancesStorageV9122.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9122.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9140U)
            {
                _balancesStorageV9140.blockHash = blockHash;
                param = await _balancesStorageV9140.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9140.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9151U)
            {
                _balancesStorageV9151.blockHash = blockHash;
                param = await _balancesStorageV9151.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9151.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9170U)
            {
                _balancesStorageV9170.blockHash = blockHash;
                param = await _balancesStorageV9170.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9170.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9180U)
            {
                _balancesStorageV9180.blockHash = blockHash;
                param = await _balancesStorageV9180.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9180.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9190U)
            {
                _balancesStorageV9190.blockHash = blockHash;
                param = await _balancesStorageV9190.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9190.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9200U)
            {
                _balancesStorageV9200.blockHash = blockHash;
                param = await _balancesStorageV9200.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9200.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9220U)
            {
                _balancesStorageV9220.blockHash = blockHash;
                param = await _balancesStorageV9220.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9220.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9230U)
            {
                _balancesStorageV9230.blockHash = blockHash;
                param = await _balancesStorageV9230.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9230.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9250U)
            {
                _balancesStorageV9250.blockHash = blockHash;
                param = await _balancesStorageV9250.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9250.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9260U)
            {
                _balancesStorageV9260.blockHash = blockHash;
                param = await _balancesStorageV9260.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9260.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9270U)
            {
                _balancesStorageV9270.blockHash = blockHash;
                param = await _balancesStorageV9270.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9270.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9280U)
            {
                _balancesStorageV9280.blockHash = blockHash;
                param = await _balancesStorageV9280.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9280.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9281U)
            {
                _balancesStorageV9281.blockHash = blockHash;
                param = await _balancesStorageV9281.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9281.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9291U)
            {
                _balancesStorageV9291.blockHash = blockHash;
                param = await _balancesStorageV9291.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9291.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9300U)
            {
                _balancesStorageV9300.blockHash = blockHash;
                param = await _balancesStorageV9300.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9300.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9340U)
            {
                _balancesStorageV9340.blockHash = blockHash;
                param = await _balancesStorageV9340.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9340.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9360U)
            {
                _balancesStorageV9360.blockHash = blockHash;
                param = await _balancesStorageV9360.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9360.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9370U)
            {
                _balancesStorageV9370.blockHash = blockHash;
                param = await _balancesStorageV9370.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9370.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.Reserves((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersionParams
        ///  Storage version of the pallet.
        /// 
        ///  This is set to v2.0.0 for new networks.
        /// </summary>
        public static string StorageVersionParams(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.StorageVersionParams();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.StorageVersionParams();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.StorageVersionParams();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.StorageVersionParams();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.StorageVersionParams();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.StorageVersionParams();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.StorageVersionParams();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.StorageVersionParams();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.StorageVersionParams();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.StorageVersionParams();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.StorageVersionParams();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.StorageVersionParams();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.StorageVersionParams();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.StorageVersionParams();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.StorageVersionParams();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.StorageVersionParams();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.StorageVersionParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersionDefault
        /// Default value as hex string
        /// </summary>
        public static string StorageVersionDefault(uint version)
        {
            string param = null;
            if (version == 9110U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage.StorageVersionDefault();
            if (version == 9122U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage.StorageVersionDefault();
            if (version == 9140U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage.StorageVersionDefault();
            if (version == 9151U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage.StorageVersionDefault();
            if (version == 9170U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage.StorageVersionDefault();
            if (version == 9180U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage.StorageVersionDefault();
            if (version == 9190U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage.StorageVersionDefault();
            if (version == 9200U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage.StorageVersionDefault();
            if (version == 9220U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage.StorageVersionDefault();
            if (version == 9230U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage.StorageVersionDefault();
            if (version == 9250U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage.StorageVersionDefault();
            if (version == 9260U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage.StorageVersionDefault();
            if (version == 9270U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage.StorageVersionDefault();
            if (version == 9280U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage.StorageVersionDefault();
            if (version == 9281U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage.StorageVersionDefault();
            if (version == 9291U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage.StorageVersionDefault();
            if (version == 9300U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage.StorageVersionDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> StorageVersion
        ///  Storage version of the pallet.
        /// 
        ///  This is set to v2.0.0 for new networks.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum> StorageVersionAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnum param = null;
            if (version == 9110U)
            {
                _balancesStorageV9110.blockHash = blockHash;
                param = await _balancesStorageV9110.StorageVersion(token);
            }

            if (version == 9122U)
            {
                _balancesStorageV9122.blockHash = blockHash;
                param = await _balancesStorageV9122.StorageVersion(token);
            }

            if (version == 9140U)
            {
                _balancesStorageV9140.blockHash = blockHash;
                param = await _balancesStorageV9140.StorageVersion(token);
            }

            if (version == 9151U)
            {
                _balancesStorageV9151.blockHash = blockHash;
                param = await _balancesStorageV9151.StorageVersion(token);
            }

            if (version == 9170U)
            {
                _balancesStorageV9170.blockHash = blockHash;
                param = await _balancesStorageV9170.StorageVersion(token);
            }

            if (version == 9180U)
            {
                _balancesStorageV9180.blockHash = blockHash;
                param = await _balancesStorageV9180.StorageVersion(token);
            }

            if (version == 9190U)
            {
                _balancesStorageV9190.blockHash = blockHash;
                param = await _balancesStorageV9190.StorageVersion(token);
            }

            if (version == 9200U)
            {
                _balancesStorageV9200.blockHash = blockHash;
                param = await _balancesStorageV9200.StorageVersion(token);
            }

            if (version == 9220U)
            {
                _balancesStorageV9220.blockHash = blockHash;
                param = await _balancesStorageV9220.StorageVersion(token);
            }

            if (version == 9230U)
            {
                _balancesStorageV9230.blockHash = blockHash;
                param = await _balancesStorageV9230.StorageVersion(token);
            }

            if (version == 9250U)
            {
                _balancesStorageV9250.blockHash = blockHash;
                param = await _balancesStorageV9250.StorageVersion(token);
            }

            if (version == 9260U)
            {
                _balancesStorageV9260.blockHash = blockHash;
                param = await _balancesStorageV9260.StorageVersion(token);
            }

            if (version == 9270U)
            {
                _balancesStorageV9270.blockHash = blockHash;
                param = await _balancesStorageV9270.StorageVersion(token);
            }

            if (version == 9280U)
            {
                _balancesStorageV9280.blockHash = blockHash;
                param = await _balancesStorageV9280.StorageVersion(token);
            }

            if (version == 9281U)
            {
                _balancesStorageV9281.blockHash = blockHash;
                param = await _balancesStorageV9281.StorageVersion(token);
            }

            if (version == 9291U)
            {
                _balancesStorageV9291.blockHash = blockHash;
                param = await _balancesStorageV9291.StorageVersion(token);
            }

            if (version == 9300U)
            {
                _balancesStorageV9300.blockHash = blockHash;
                param = await _balancesStorageV9300.StorageVersion(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> InactiveIssuanceParams
        ///  The total units of outstanding deactivated balance in the system.
        /// </summary>
        public static string InactiveIssuanceParams(uint version)
        {
            string param = null;
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.InactiveIssuanceParams();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.InactiveIssuanceParams();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.InactiveIssuanceParams();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.InactiveIssuanceParams();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.InactiveIssuanceParams();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> InactiveIssuanceDefault
        /// Default value as hex string
        /// </summary>
        public static string InactiveIssuanceDefault(uint version)
        {
            string param = null;
            if (version == 9340U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage.InactiveIssuanceDefault();
            if (version == 9360U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage.InactiveIssuanceDefault();
            if (version == 9370U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage.InactiveIssuanceDefault();
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.InactiveIssuanceDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.InactiveIssuanceDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> InactiveIssuance
        ///  The total units of outstanding deactivated balance in the system.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U128> InactiveIssuanceAsync(CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Primitive.U128 param = null;
            if (version == 9340U)
            {
                _balancesStorageV9340.blockHash = blockHash;
                param = await _balancesStorageV9340.InactiveIssuance(token);
            }

            if (version == 9360U)
            {
                _balancesStorageV9360.blockHash = blockHash;
                param = await _balancesStorageV9360.InactiveIssuance(token);
            }

            if (version == 9370U)
            {
                _balancesStorageV9370.blockHash = blockHash;
                param = await _balancesStorageV9370.InactiveIssuance(token);
            }

            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.InactiveIssuance(token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.InactiveIssuance(token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> HoldsParams
        ///  Holds on account balances.
        /// </summary>
        public static string HoldsParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.HoldsParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.HoldsParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> HoldsDefault
        /// Default value as hex string
        /// </summary>
        public static string HoldsDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.HoldsDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.HoldsDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Holds
        ///  Holds on account balances.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> HoldsAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.Holds((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.Holds((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> FreezesParams
        ///  Freeze locks on account balances.
        /// </summary>
        public static string FreezesParams(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.FreezesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key);
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.FreezesParams((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key);
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> FreezesDefault
        /// Default value as hex string
        /// </summary>
        public static string FreezesDefault(uint version)
        {
            string param = null;
            if (version == 9420U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage.FreezesDefault();
            if (version == 9430U)
                param = Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage.FreezesDefault();
            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        /// <summary>
        /// >> Freezes
        ///  Freeze locks on account balances.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable> FreezesAsync(Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.sp_core.crypto.AccountId32Base key, CancellationToken token)
        {
            var version = await GetVersionAsync(token);
            Substrate.NetApi.Model.Types.Base.Abstraction.IBaseEnumerable param = null;
            if (version == 9420U)
            {
                _balancesStorageV9420.blockHash = blockHash;
                param = await _balancesStorageV9420.Freezes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.sp_core.crypto.AccountId32)key,token);
            }

            if (version == 9430U)
            {
                _balancesStorageV9430.blockHash = blockHash;
                param = await _balancesStorageV9430.Freezes((Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9430.sp_core.crypto.AccountId32)key,token);
            }

            if (param == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return param;
        }

        public BalancesStorage(SubstrateClientExt client)
        {
            _client = client;
            _balancesStorageV9110 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesStorage(_client);
            _balancesStorageV9122 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesStorage(_client);
            _balancesStorageV9140 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesStorage(_client);
            _balancesStorageV9151 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesStorage(_client);
            _balancesStorageV9170 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesStorage(_client);
            _balancesStorageV9180 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesStorage(_client);
            _balancesStorageV9190 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesStorage(_client);
            _balancesStorageV9200 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesStorage(_client);
            _balancesStorageV9220 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesStorage(_client);
            _balancesStorageV9230 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesStorage(_client);
            _balancesStorageV9250 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesStorage(_client);
            _balancesStorageV9260 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesStorage(_client);
            _balancesStorageV9270 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesStorage(_client);
            _balancesStorageV9280 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesStorage(_client);
            _balancesStorageV9281 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesStorage(_client);
            _balancesStorageV9291 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesStorage(_client);
            _balancesStorageV9300 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesStorage(_client);
            _balancesStorageV9340 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesStorage(_client);
            _balancesStorageV9360 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesStorage(_client);
            _balancesStorageV9370 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesStorage(_client);
            _balancesStorageV9420 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesStorage(_client);
            _balancesStorageV9430 = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesStorage(_client);
        }
    }

    public sealed class BalancesConstants
    {
        /// <summary>
        /// >> ExistentialDeposit
        ///  The minimum amount required to keep an account open.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ExistentialDeposit(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U128 result = null;
            if (version == 9110U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesConstants().ExistentialDeposit();
            if (version == 9122U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesConstants().ExistentialDeposit();
            if (version == 9140U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesConstants().ExistentialDeposit();
            if (version == 9151U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesConstants().ExistentialDeposit();
            if (version == 9170U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesConstants().ExistentialDeposit();
            if (version == 9180U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesConstants().ExistentialDeposit();
            if (version == 9190U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesConstants().ExistentialDeposit();
            if (version == 9200U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesConstants().ExistentialDeposit();
            if (version == 9220U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesConstants().ExistentialDeposit();
            if (version == 9230U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesConstants().ExistentialDeposit();
            if (version == 9250U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesConstants().ExistentialDeposit();
            if (version == 9260U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesConstants().ExistentialDeposit();
            if (version == 9270U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesConstants().ExistentialDeposit();
            if (version == 9280U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesConstants().ExistentialDeposit();
            if (version == 9281U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesConstants().ExistentialDeposit();
            if (version == 9291U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesConstants().ExistentialDeposit();
            if (version == 9300U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesConstants().ExistentialDeposit();
            if (version == 9340U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesConstants().ExistentialDeposit();
            if (version == 9360U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesConstants().ExistentialDeposit();
            if (version == 9370U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesConstants().ExistentialDeposit();
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesConstants().ExistentialDeposit();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesConstants().ExistentialDeposit();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxLocks
        ///  The maximum number of locks that should exist on an account.
        ///  Not strictly enforced, but used for weight estimation.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxLocks(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U32 result = null;
            if (version == 9110U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesConstants().MaxLocks();
            if (version == 9122U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesConstants().MaxLocks();
            if (version == 9140U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesConstants().MaxLocks();
            if (version == 9151U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesConstants().MaxLocks();
            if (version == 9170U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesConstants().MaxLocks();
            if (version == 9180U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesConstants().MaxLocks();
            if (version == 9190U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesConstants().MaxLocks();
            if (version == 9200U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesConstants().MaxLocks();
            if (version == 9220U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesConstants().MaxLocks();
            if (version == 9230U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesConstants().MaxLocks();
            if (version == 9250U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesConstants().MaxLocks();
            if (version == 9260U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesConstants().MaxLocks();
            if (version == 9270U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesConstants().MaxLocks();
            if (version == 9280U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesConstants().MaxLocks();
            if (version == 9281U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesConstants().MaxLocks();
            if (version == 9291U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesConstants().MaxLocks();
            if (version == 9300U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesConstants().MaxLocks();
            if (version == 9340U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesConstants().MaxLocks();
            if (version == 9360U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesConstants().MaxLocks();
            if (version == 9370U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesConstants().MaxLocks();
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesConstants().MaxLocks();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesConstants().MaxLocks();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxReserves
        ///  The maximum number of named reserves that can exist on an account.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxReserves(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U32 result = null;
            if (version == 9110U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9110.BalancesConstants().MaxReserves();
            if (version == 9122U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9122.BalancesConstants().MaxReserves();
            if (version == 9140U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9140.BalancesConstants().MaxReserves();
            if (version == 9151U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9151.BalancesConstants().MaxReserves();
            if (version == 9170U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9170.BalancesConstants().MaxReserves();
            if (version == 9180U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9180.BalancesConstants().MaxReserves();
            if (version == 9190U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9190.BalancesConstants().MaxReserves();
            if (version == 9200U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9200.BalancesConstants().MaxReserves();
            if (version == 9220U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9220.BalancesConstants().MaxReserves();
            if (version == 9230U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9230.BalancesConstants().MaxReserves();
            if (version == 9250U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9250.BalancesConstants().MaxReserves();
            if (version == 9260U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9260.BalancesConstants().MaxReserves();
            if (version == 9270U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9270.BalancesConstants().MaxReserves();
            if (version == 9280U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9280.BalancesConstants().MaxReserves();
            if (version == 9281U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9281.BalancesConstants().MaxReserves();
            if (version == 9291U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9291.BalancesConstants().MaxReserves();
            if (version == 9300U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9300.BalancesConstants().MaxReserves();
            if (version == 9340U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9340.BalancesConstants().MaxReserves();
            if (version == 9360U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9360.BalancesConstants().MaxReserves();
            if (version == 9370U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9370.BalancesConstants().MaxReserves();
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesConstants().MaxReserves();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesConstants().MaxReserves();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxHolds
        ///  The maximum number of holds that can exist on an account at any time.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxHolds(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U32 result = null;
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesConstants().MaxHolds();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesConstants().MaxHolds();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }

        /// <summary>
        /// >> MaxFreezes
        ///  The maximum number of individual freeze locks that can exist on an account at any time.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxFreezes(uint version)
        {
            Substrate.NetApi.Model.Types.Primitive.U32 result = null;
            if (version == 9420U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9420.BalancesConstants().MaxFreezes();
            if (version == 9430U)
                result = new Polkanalysis.Polkadot.NetApiExt.Generated.Storage.v9430.BalancesConstants().MaxFreezes();
            if (result == null)
                throw new System.InvalidOperationException("Error while fetching data");
            return result;
        }
    }

    public enum BalancesErrors
    {
        /// <summary>
        /// >> VestingBalance
        /// Vesting balance too high to send value
        /// </summary>
        VestingBalance,
        /// <summary>
        /// >> LiquidityRestrictions
        /// Account liquidity restrictions prevent withdrawal
        /// </summary>
        LiquidityRestrictions,
        /// <summary>
        /// >> InsufficientBalance
        /// Balance too low to send value
        /// </summary>
        InsufficientBalance,
        /// <summary>
        /// >> ExistentialDeposit
        /// Value too low to create account due to existential deposit
        /// </summary>
        ExistentialDeposit,
        /// <summary>
        /// >> KeepAlive
        /// Transfer/payment would kill account
        /// </summary>
        KeepAlive,
        /// <summary>
        /// >> ExistingVestingSchedule
        /// A vesting schedule already exists for this account
        /// </summary>
        ExistingVestingSchedule,
        /// <summary>
        /// >> DeadAccount
        /// Beneficiary account must pre-exist
        /// </summary>
        DeadAccount,
        /// <summary>
        /// >> TooManyReserves
        /// Number of named reserves exceed MaxReserves
        /// </summary>
        TooManyReserves,
        /// <summary>
        /// >> Expendability
        /// Transfer/payment would kill account.
        /// </summary>
        Expendability,
        /// <summary>
        /// >> TooManyHolds
        /// Number of holds exceed `MaxHolds`.
        /// </summary>
        TooManyHolds
    }
}