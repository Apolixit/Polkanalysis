//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using Substrate.NetApi.Model.Types.Metadata.V14;
using Substrate.NetApi.Attributes;
using Polkanalysis.Polkadot.NetApiExt.Generated.Model.vbase.xcm.v3.multiasset;

namespace Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.xcm.v3.multiasset
{
    /// <summary>
    /// >> 14300 - Composite[xcm.v3.multiasset.MultiAsset]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class MultiAsset : MultiAssetBase
    {
        public override System.String TypeName()
        {
            return "MultiAsset";
        }

        public override System.Byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Id.Encode());
            result.AddRange(Fun.Encode());
            return result.ToArray();
        }

        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Id = new Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.xcm.v3.multiasset.EnumAssetId();
            Id.Decode(byteArray, ref p);
            Fun = new Polkanalysis.Polkadot.NetApiExt.Generated.Model.v9420.xcm.v3.multiasset.EnumFungibility();
            Fun.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}