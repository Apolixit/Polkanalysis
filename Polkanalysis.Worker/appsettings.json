{
  "ConnectionStrings": {
    "SubstrateDb": "Host=localhost:5432; Username=postgres; Password=test; Database=Polkanalysis"
  },
  "SubstrateEndpoint": {
    "Endpoint": "wss://rpc.polkadot.io",
    "Name": "Polkadot"
  },
  // blockPerimeter is not required, if not set the background worker will just subscribe to new blocks
  "blockPerimeter": {
    /* 
      fromBlock can have following values : 
        * blockNumber
        * genesis
    */
    "from": "14000000",
    /*
      toBlock can have following values : 
        * blockNumber
        * now
    */
    "to": "now",
    /* If the data already exists in the database, do we have to overwrite it ? */
    "overrideIfAlreadyExists": false
  },
  "eraPerimeter": {
    /* 
    from can have following values : 
      * Era Id
      * genesis
    */
    "from": 1100,
    /* 
    from can have following values : 
      * Era Id
      * now
    */
    "to": "now",
    "overrideIfAlreadyExists": false
  },
  "tokenPricePerimeter": {
    /* 
    from can have following values : 
      * From Date (format : YYYY.MM.DD)
    */
    "from": "2023.01.01",
    /* 
    from can have following values : 
      * From Date (format : YYYY.MM.DD)
      * now
    */
    "to": "now",
    "overrideIfAlreadyExists": false
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Elasticsearch" ],
    "MinimumLevel": "Information",
    // Targets where we want to write our log (list here : https://github.com/serilog/serilog/wiki/Provided-Sinks)
    "WriteTo": [
      // https://github.com/serilog/serilog-sinks-console
      {
        "Name": "Console"
      },
      // https://github.com/serilog/serilog-sinks-file
      {
        "Name": "File",
        "Args": {
          "path": "Logs/worker.txt",
          "rollingInterval": "Day"
        }
      },
      // https://github.com/serilog-contrib/serilog-sinks-elasticsearch
      {
        "Name": "Elasticsearch",
        "Args": {
          "nodeUris": "http://localhost:9200"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName" ],
    "Properties": {
      "Application": "Polkanalysis.Worker"
    }
  }
}