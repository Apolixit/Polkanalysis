@page "/validators/{ValidatorAddress}"
@using OperationResult;
@using Polkanalysis.Components.Dto;
@using Polkanalysis.Domain.Contracts.Dto.Staking.Validator;
@using Polkanalysis.Domain.Contracts.Primary.Staking.Validators;

@inject IMediator _mediator;

<DataMediator Request="request">
    <Polkanalysis.Components.Shared.Breadcrumb Elements="breadcrumbDtos" />

    <div>Controller address : @context.ControllerAddress</div>
</DataMediator>

@code {
    [Parameter] public required string ValidatorAddress { get; set; }
    private Task<Result<ValidatorDto, ErrorResult>> request;
    private IEnumerable<BreadcrumbDto> breadcrumbDtos;

    protected async override Task OnInitializedAsync()
    {
        request = _mediator.Send(new ValidatorDetailQuery()
        {
            ValidatorAddress = ValidatorAddress
        }, CancellationToken.None);

        breadcrumbDtos = new List<BreadcrumbDto>()
        {
            new BreadcrumbDto("Validator detail", $"/validators/{ValidatorAddress}")
        };
    }
}
