@using MediatR.Courier;
@using MediatR;
@using Polkanalysis.Domain.Contracts.Dto.Block;
@using Polkanalysis.Domain.Contracts.Primary.Notification;
@using Polkanalysis.Domain.Contracts.Primary;
@using Polkanalysis.Domain.Contracts.Secondary.Repository;

@inject IExplorerRepository _blockRepository;
@inject NavigationManager _navigationManager;

<div class="card">
    <div class="card-header">
        Latest block
    </div>
    <div class="table-responsive">
        <BlockListing NbBlockMax="10"></BlockListing>
    </div>
</div>

@code {
    [Parameter] public int NbBlockMax { get; set; } = 10;
    private List<BlockLightDto> blocks = new List<BlockLightDto>();

    protected async override Task OnInitializedAsync()
    {
        await _blockRepository.SubscribeNewBlocksAsync((BlockLightDto blockLight) =>
        {
            blocks.Insert(0, blockLight);

            if (blocks.Count > NbBlockMax)
            {
                blocks = blocks.Take(NbBlockMax).ToList();
            }

            StateHasChanged();
        }, CancellationToken.None);
    }

    protected void GoToBlockDetails(ulong blockId)
    {
        _navigationManager.NavigateTo($"block/{blockId}");
    }
}
