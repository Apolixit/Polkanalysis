@page "/block/{blockId:int}"
@page "/block/{blockHash?}"

@using MediatR;
@using Polkanalysis.Components.Services.Http;
@using Polkanalysis.Domain.Contracts.Dto.Block;
@using Polkanalysis.Domain.Contracts.Primary;
@using Polkanalysis.Domain.Contracts.Primary.Result;
@using Polkanalysis.Domain.Contracts.Secondary.Repository;
@inject IMediator _mediator;
@inject IApiService apiService;


<div class="card">
    <div class="card-header">
        Details block n°@blockId
        <div class="card-action">
            <div class="dropdown">
                <a href="javascript:void();" class="dropdown-toggle dropdown-toggle-nocaret" data-toggle="dropdown">
                    <i class="icon-options"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right">
                    <a class="dropdown-item" href="javascript:void();">Export PDF</a>
                    <a class="dropdown-item" href="javascript:void();">Export Excel</a>
                </div>
            </div>
        </div>
    </div>

    <div class="card-body">
        @*<Data UseCaseData="@blockDetail">
            @if (blockDetail == null)
            {
                <Loader />
            }
            else
            {
                <span>Hash : @blockDetail.Value.Hash</span>

            }
        </Data>*@

    </div>
    <div class="table-responsive">
        <table class="table align-items-center">
            <tbody>
                <tr>
                    <td><PolkadotIcons IconName="Block Number.svg" /> Block hash</td>
                    <td>@blockDetail.Hash</td>
                </tr>
                <tr>
                    <td><i class="fa-solid fa-alarm-clock"></i> Timestamp</td>
                    <td>@blockDetail.Date.Date</td>
                </tr>
                <tr>
                    <td><PolkadotIcons IconName="Time.svg" /> Block time</td>
                    <td>@blockDetail.Date.Date</td>
                </tr>
                <tr>
                    <td><i class="fa-solid fa-battery-empty"></i> Status</td>
                    <td>@blockDetail.Status</td>
                </tr>
                <tr>
                    <td><PolkadotIcons IconName="Blockchain.svg" /> Parent hash</td>
                    <td>@blockDetail.ParentHash</td>
                </tr>
                <tr>
                    <td><i class="fa-solid fa-signal-bars"></i> State root</td>
                    <td>@blockDetail.StateRoot</td>
                </tr>
                <tr>
                    <td><PolkadotIcons IconName="Block Explorer.svg" /> Extrinsic root</td>
                    <td>@blockDetail.ExtrinsicsRoot</td>
                </tr>
                <tr>
                    <td><PolkadotIcons IconName="Validator.svg" /> Validator</td>
                    <td>@blockDetail.Validator</td>
                </tr>
                <tr>
                    <td><PolkadotIcons IconName="Version.svg" /> Spec version</td>
                    <td>@blockDetail.SpecVersion</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter] public int? blockId { get; set; }
    [Parameter] public string? blockHash { get; set; }
    private BlockDto blockDetail;

    protected override async Task OnInitializedAsync()
    {
        blockDetail = await apiService.GetHelperAsync<BlockDetailsCommand, BlockDto>("/api/polkadot/block", new BlockDetailsCommand((uint)blockId));
        StateHasChanged();
    }
}
